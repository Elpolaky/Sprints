
Moving_Car_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000524  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000598  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  00000598  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001378  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000851  00000000  00000000  00001abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000970  00000000  00000000  0000230d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000026c  00000000  00000000  00002c80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000739  00000000  00000000  00002eec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000eec  00000000  00000000  00003625  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004511  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__vector_1>
   8:	0c 94 36 02 	jmp	0x46c	; 0x46c <__vector_2>
   c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 68 00 	call	0xd0	; 0xd0 <main>
  74:	0c 94 90 02 	jmp	0x520	; 0x520 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <LED_INIT>:
{
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
  7c:	88 32       	cpi	r24, 0x28	; 40
  7e:	28 f4       	brcc	.+10     	; 0x8a <LED_INIT+0xe>
	{
		return INVLAID_LED_PIN_NUMBER;
	}
	else
	{
		DIO_INITPIN(PIN,OUTPUT);
  80:	60 e0       	ldi	r22, 0x00	; 0
  82:	0e 94 6e 00 	call	0xdc	; 0xdc <DIO_INITPIN>
		return VALID_LED;
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	08 95       	ret
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
	{
		return INVALID_LED_PORT;
  8a:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		DIO_INITPIN(PIN,OUTPUT);
		return VALID_LED;
	}
}
  8c:	08 95       	ret

0000008e <Car_Moving_FWD>:
/**DESCRIPTION:-
this fumction is used to drive the motor to move in the +VE direction which will lead the car to move FWD
**/
void Car_Moving_FWD(void)
{
	DIO_WRITEPIN(motor1_0,LOW);          //this is used to provide voltage to the +ve pin of the motor 
  8e:	60 e0       	ldi	r22, 0x00	; 0
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor1_1,HIGH);           //this is used to provide the ground to the -ve pin of 
  96:	61 e0       	ldi	r22, 0x01	; 1
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor2_0,LOW);
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	82 e0       	ldi	r24, 0x02	; 2
  a2:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor2_1,HIGH);
  a6:	61 e0       	ldi	r22, 0x01	; 1
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor3_0,HIGH);
  ae:	61 e0       	ldi	r22, 0x01	; 1
  b0:	84 e0       	ldi	r24, 0x04	; 4
  b2:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor3_1,LOW);
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	85 e0       	ldi	r24, 0x05	; 5
  ba:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor4_0,HIGH);
  be:	61 e0       	ldi	r22, 0x01	; 1
  c0:	86 e0       	ldi	r24, 0x06	; 6
  c2:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
	DIO_WRITEPIN(motor4_1,LOW);
  c6:	60 e0       	ldi	r22, 0x00	; 0
  c8:	87 e0       	ldi	r24, 0x07	; 7
  ca:	0e 94 70 01 	call	0x2e0	; 0x2e0 <DIO_WRITEPIN>
  ce:	08 95       	ret

000000d0 <main>:
#include "APP/APP.h"

int main(void)
{
	LED_INIT(pinb0);
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	0e 94 3e 00 	call	0x7c	; 0x7c <LED_INIT>

while(1){
	Car_Moving_FWD();
  d6:	0e 94 47 00 	call	0x8e	; 0x8e <Car_Moving_FWD>
  da:	fd cf       	rjmp	.-6      	; 0xd6 <main+0x6>

000000dc <DIO_INITPIN>:
   */
DIO_ERROR_TYPE DIO_INITPIN(DIO_PIN_TYPE PIN,DIO_PINSTATUS_TYPE STATUS)
{
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;                                  //to determine which port i'm using
  dc:	98 2f       	mov	r25, r24
  de:	96 95       	lsr	r25
  e0:	96 95       	lsr	r25
  e2:	96 95       	lsr	r25
	PIN_NUM=PIN%8;                               //to determine which pin in the port i'm using 
	DIO_ERROR_TYPE error=VALID_DIO;
	if(PORT>4)
  e4:	95 30       	cpi	r25, 0x05	; 5
  e6:	08 f0       	brcs	.+2      	; 0xea <DIO_INITPIN+0xe>
  e8:	f9 c0       	rjmp	.+498    	; 0x2dc <DIO_INITPIN+0x200>
DIO_ERROR_TYPE DIO_INITPIN(DIO_PIN_TYPE PIN,DIO_PINSTATUS_TYPE STATUS)
{
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;                                  //to determine which port i'm using
	PIN_NUM=PIN%8;                               //to determine which pin in the port i'm using 
  ea:	87 70       	andi	r24, 0x07	; 7
	{
		return INVALID_PIN_NUMBER;
	}
	else
	 {
	switch(STATUS)
  ec:	61 30       	cpi	r22, 0x01	; 1
  ee:	31 f0       	breq	.+12     	; 0xfc <DIO_INITPIN+0x20>
  f0:	08 f4       	brcc	.+2      	; 0xf4 <DIO_INITPIN+0x18>
  f2:	a4 c0       	rjmp	.+328    	; 0x23c <DIO_INITPIN+0x160>
  f4:	62 30       	cpi	r22, 0x02	; 2
  f6:	09 f4       	brne	.+2      	; 0xfa <DIO_INITPIN+0x1e>
  f8:	51 c0       	rjmp	.+162    	; 0x19c <DIO_INITPIN+0xc0>
  fa:	ef c0       	rjmp	.+478    	; 0x2da <DIO_INITPIN+0x1fe>
	{
		case INFREE:
		switch(PORT)
  fc:	91 30       	cpi	r25, 0x01	; 1
  fe:	c1 f0       	breq	.+48     	; 0x130 <DIO_INITPIN+0x54>
 100:	28 f0       	brcs	.+10     	; 0x10c <DIO_INITPIN+0x30>
 102:	92 30       	cpi	r25, 0x02	; 2
 104:	39 f1       	breq	.+78     	; 0x154 <DIO_INITPIN+0x78>
 106:	93 30       	cpi	r25, 0x03	; 3
 108:	b9 f1       	breq	.+110    	; 0x178 <DIO_INITPIN+0x9c>
 10a:	e7 c0       	rjmp	.+462    	; 0x2da <DIO_INITPIN+0x1fe>
		{
			case PA:
			clear_bit(DDRA,PIN_NUM);
 10c:	4a b3       	in	r20, 0x1a	; 26
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	b9 01       	movw	r22, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_INITPIN+0x3e>
 116:	66 0f       	add	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_INITPIN+0x3a>
 11e:	cb 01       	movw	r24, r22
 120:	80 95       	com	r24
 122:	94 2f       	mov	r25, r20
 124:	98 23       	and	r25, r24
 126:	9a bb       	out	0x1a, r25	; 26
			clear_bit(PORTA,PIN_NUM);       /*to make sure that the port register  is cleared in case of reuse*/
 128:	9b b3       	in	r25, 0x1b	; 27
 12a:	89 23       	and	r24, r25
 12c:	8b bb       	out	0x1b, r24	; 27
			break;
 12e:	d5 c0       	rjmp	.+426    	; 0x2da <DIO_INITPIN+0x1fe>
			case PB:
			clear_bit(DDRB,PIN_NUM);
 130:	47 b3       	in	r20, 0x17	; 23
 132:	21 e0       	ldi	r18, 0x01	; 1
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	b9 01       	movw	r22, r18
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_INITPIN+0x62>
 13a:	66 0f       	add	r22, r22
 13c:	77 1f       	adc	r23, r23
 13e:	8a 95       	dec	r24
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_INITPIN+0x5e>
 142:	cb 01       	movw	r24, r22
 144:	80 95       	com	r24
 146:	94 2f       	mov	r25, r20
 148:	98 23       	and	r25, r24
 14a:	97 bb       	out	0x17, r25	; 23
			clear_bit(PORTB,PIN_NUM);
 14c:	98 b3       	in	r25, 0x18	; 24
 14e:	89 23       	and	r24, r25
 150:	88 bb       	out	0x18, r24	; 24
			break;
 152:	c3 c0       	rjmp	.+390    	; 0x2da <DIO_INITPIN+0x1fe>

			case PC:
			clear_bit(DDRC,PIN_NUM);
 154:	44 b3       	in	r20, 0x14	; 20
 156:	21 e0       	ldi	r18, 0x01	; 1
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	b9 01       	movw	r22, r18
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_INITPIN+0x86>
 15e:	66 0f       	add	r22, r22
 160:	77 1f       	adc	r23, r23
 162:	8a 95       	dec	r24
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_INITPIN+0x82>
 166:	cb 01       	movw	r24, r22
 168:	80 95       	com	r24
 16a:	94 2f       	mov	r25, r20
 16c:	98 23       	and	r25, r24
 16e:	94 bb       	out	0x14, r25	; 20
			clear_bit(PORTC,PIN_NUM);
 170:	95 b3       	in	r25, 0x15	; 21
 172:	89 23       	and	r24, r25
 174:	85 bb       	out	0x15, r24	; 21
			break;
 176:	b1 c0       	rjmp	.+354    	; 0x2da <DIO_INITPIN+0x1fe>

			case PD:
			clear_bit(DDRD,PIN_NUM);
 178:	41 b3       	in	r20, 0x11	; 17
 17a:	21 e0       	ldi	r18, 0x01	; 1
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	b9 01       	movw	r22, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_INITPIN+0xaa>
 182:	66 0f       	add	r22, r22
 184:	77 1f       	adc	r23, r23
 186:	8a 95       	dec	r24
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_INITPIN+0xa6>
 18a:	cb 01       	movw	r24, r22
 18c:	80 95       	com	r24
 18e:	94 2f       	mov	r25, r20
 190:	98 23       	and	r25, r24
 192:	91 bb       	out	0x11, r25	; 17
			clear_bit(PORTD,PIN_NUM);
 194:	92 b3       	in	r25, 0x12	; 18
 196:	89 23       	and	r24, r25
 198:	82 bb       	out	0x12, r24	; 18
			break;
 19a:	9f c0       	rjmp	.+318    	; 0x2da <DIO_INITPIN+0x1fe>
		}
		break;
		
		case INPLUP:
		switch(PORT)
 19c:	91 30       	cpi	r25, 0x01	; 1
 19e:	c1 f0       	breq	.+48     	; 0x1d0 <DIO_INITPIN+0xf4>
 1a0:	28 f0       	brcs	.+10     	; 0x1ac <DIO_INITPIN+0xd0>
 1a2:	92 30       	cpi	r25, 0x02	; 2
 1a4:	39 f1       	breq	.+78     	; 0x1f4 <DIO_INITPIN+0x118>
 1a6:	93 30       	cpi	r25, 0x03	; 3
 1a8:	b9 f1       	breq	.+110    	; 0x218 <DIO_INITPIN+0x13c>
 1aa:	97 c0       	rjmp	.+302    	; 0x2da <DIO_INITPIN+0x1fe>
		{
			case PA:
			clear_bit(DDRA,PIN_NUM);
 1ac:	4a b3       	in	r20, 0x1a	; 26
 1ae:	21 e0       	ldi	r18, 0x01	; 1
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	b9 01       	movw	r22, r18
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_INITPIN+0xde>
 1b6:	66 0f       	add	r22, r22
 1b8:	77 1f       	adc	r23, r23
 1ba:	8a 95       	dec	r24
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_INITPIN+0xda>
 1be:	cb 01       	movw	r24, r22
 1c0:	96 2f       	mov	r25, r22
 1c2:	90 95       	com	r25
 1c4:	94 23       	and	r25, r20
 1c6:	9a bb       	out	0x1a, r25	; 26
			set_bit(PORTA,PIN_NUM);
 1c8:	9b b3       	in	r25, 0x1b	; 27
 1ca:	89 2b       	or	r24, r25
 1cc:	8b bb       	out	0x1b, r24	; 27
			break;
 1ce:	85 c0       	rjmp	.+266    	; 0x2da <DIO_INITPIN+0x1fe>
			
			case PB:
			clear_bit(DDRB,PIN_NUM);
 1d0:	47 b3       	in	r20, 0x17	; 23
 1d2:	21 e0       	ldi	r18, 0x01	; 1
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	b9 01       	movw	r22, r18
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_INITPIN+0x102>
 1da:	66 0f       	add	r22, r22
 1dc:	77 1f       	adc	r23, r23
 1de:	8a 95       	dec	r24
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_INITPIN+0xfe>
 1e2:	cb 01       	movw	r24, r22
 1e4:	96 2f       	mov	r25, r22
 1e6:	90 95       	com	r25
 1e8:	94 23       	and	r25, r20
 1ea:	97 bb       	out	0x17, r25	; 23
			set_bit(PORTB,PIN_NUM);
 1ec:	98 b3       	in	r25, 0x18	; 24
 1ee:	89 2b       	or	r24, r25
 1f0:	88 bb       	out	0x18, r24	; 24
			break;
 1f2:	73 c0       	rjmp	.+230    	; 0x2da <DIO_INITPIN+0x1fe>

			case PC:
			clear_bit(DDRC,PIN_NUM);
 1f4:	44 b3       	in	r20, 0x14	; 20
 1f6:	21 e0       	ldi	r18, 0x01	; 1
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	b9 01       	movw	r22, r18
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_INITPIN+0x126>
 1fe:	66 0f       	add	r22, r22
 200:	77 1f       	adc	r23, r23
 202:	8a 95       	dec	r24
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_INITPIN+0x122>
 206:	cb 01       	movw	r24, r22
 208:	96 2f       	mov	r25, r22
 20a:	90 95       	com	r25
 20c:	94 23       	and	r25, r20
 20e:	94 bb       	out	0x14, r25	; 20
			set_bit(PORTC,PIN_NUM);
 210:	95 b3       	in	r25, 0x15	; 21
 212:	89 2b       	or	r24, r25
 214:	85 bb       	out	0x15, r24	; 21
			break;
 216:	61 c0       	rjmp	.+194    	; 0x2da <DIO_INITPIN+0x1fe>

			case PD:
			clear_bit(DDRD,PIN_NUM);
 218:	41 b3       	in	r20, 0x11	; 17
 21a:	21 e0       	ldi	r18, 0x01	; 1
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	b9 01       	movw	r22, r18
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_INITPIN+0x14a>
 222:	66 0f       	add	r22, r22
 224:	77 1f       	adc	r23, r23
 226:	8a 95       	dec	r24
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_INITPIN+0x146>
 22a:	cb 01       	movw	r24, r22
 22c:	96 2f       	mov	r25, r22
 22e:	90 95       	com	r25
 230:	94 23       	and	r25, r20
 232:	91 bb       	out	0x11, r25	; 17
			set_bit(PORTD,PIN_NUM);
 234:	92 b3       	in	r25, 0x12	; 18
 236:	89 2b       	or	r24, r25
 238:	82 bb       	out	0x12, r24	; 18
			break;
 23a:	4f c0       	rjmp	.+158    	; 0x2da <DIO_INITPIN+0x1fe>
		}
		break;
		return VALID_DIO;
		
		case OUTPUT:
		switch(PORT)
 23c:	91 30       	cpi	r25, 0x01	; 1
 23e:	c1 f0       	breq	.+48     	; 0x270 <DIO_INITPIN+0x194>
 240:	28 f0       	brcs	.+10     	; 0x24c <DIO_INITPIN+0x170>
 242:	92 30       	cpi	r25, 0x02	; 2
 244:	39 f1       	breq	.+78     	; 0x294 <DIO_INITPIN+0x1b8>
 246:	93 30       	cpi	r25, 0x03	; 3
 248:	b9 f1       	breq	.+110    	; 0x2b8 <DIO_INITPIN+0x1dc>
 24a:	47 c0       	rjmp	.+142    	; 0x2da <DIO_INITPIN+0x1fe>
		{
			case PA:
			clear_bit(PORTA,PIN_NUM);
 24c:	4b b3       	in	r20, 0x1b	; 27
 24e:	21 e0       	ldi	r18, 0x01	; 1
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	b9 01       	movw	r22, r18
 254:	02 c0       	rjmp	.+4      	; 0x25a <DIO_INITPIN+0x17e>
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	8a 95       	dec	r24
 25c:	e2 f7       	brpl	.-8      	; 0x256 <DIO_INITPIN+0x17a>
 25e:	cb 01       	movw	r24, r22
 260:	96 2f       	mov	r25, r22
 262:	90 95       	com	r25
 264:	94 23       	and	r25, r20
 266:	9b bb       	out	0x1b, r25	; 27
			set_bit(DDRA,PIN_NUM);
 268:	9a b3       	in	r25, 0x1a	; 26
 26a:	89 2b       	or	r24, r25
 26c:	8a bb       	out	0x1a, r24	; 26
			break;
 26e:	35 c0       	rjmp	.+106    	; 0x2da <DIO_INITPIN+0x1fe>
			
			case PB:
			clear_bit(PORTB,PIN_NUM);
 270:	48 b3       	in	r20, 0x18	; 24
 272:	21 e0       	ldi	r18, 0x01	; 1
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	b9 01       	movw	r22, r18
 278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_INITPIN+0x1a2>
 27a:	66 0f       	add	r22, r22
 27c:	77 1f       	adc	r23, r23
 27e:	8a 95       	dec	r24
 280:	e2 f7       	brpl	.-8      	; 0x27a <DIO_INITPIN+0x19e>
 282:	cb 01       	movw	r24, r22
 284:	96 2f       	mov	r25, r22
 286:	90 95       	com	r25
 288:	94 23       	and	r25, r20
 28a:	98 bb       	out	0x18, r25	; 24
			set_bit(DDRB,PIN_NUM);
 28c:	97 b3       	in	r25, 0x17	; 23
 28e:	89 2b       	or	r24, r25
 290:	87 bb       	out	0x17, r24	; 23
			break;
 292:	23 c0       	rjmp	.+70     	; 0x2da <DIO_INITPIN+0x1fe>

			case PC:
			clear_bit(PORTC,PIN_NUM);
 294:	45 b3       	in	r20, 0x15	; 21
 296:	21 e0       	ldi	r18, 0x01	; 1
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	b9 01       	movw	r22, r18
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_INITPIN+0x1c6>
 29e:	66 0f       	add	r22, r22
 2a0:	77 1f       	adc	r23, r23
 2a2:	8a 95       	dec	r24
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_INITPIN+0x1c2>
 2a6:	cb 01       	movw	r24, r22
 2a8:	96 2f       	mov	r25, r22
 2aa:	90 95       	com	r25
 2ac:	94 23       	and	r25, r20
 2ae:	95 bb       	out	0x15, r25	; 21
			set_bit(DDRC,PIN_NUM);
 2b0:	94 b3       	in	r25, 0x14	; 20
 2b2:	89 2b       	or	r24, r25
 2b4:	84 bb       	out	0x14, r24	; 20
			break;
 2b6:	11 c0       	rjmp	.+34     	; 0x2da <DIO_INITPIN+0x1fe>

			case PD:
			clear_bit(PORTD,PIN_NUM);
 2b8:	42 b3       	in	r20, 0x12	; 18
 2ba:	21 e0       	ldi	r18, 0x01	; 1
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	b9 01       	movw	r22, r18
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_INITPIN+0x1ea>
 2c2:	66 0f       	add	r22, r22
 2c4:	77 1f       	adc	r23, r23
 2c6:	8a 95       	dec	r24
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_INITPIN+0x1e6>
 2ca:	cb 01       	movw	r24, r22
 2cc:	96 2f       	mov	r25, r22
 2ce:	90 95       	com	r25
 2d0:	94 23       	and	r25, r20
 2d2:	92 bb       	out	0x12, r25	; 18
			set_bit(DDRD,PIN_NUM);
 2d4:	91 b3       	in	r25, 0x11	; 17
 2d6:	89 2b       	or	r24, r25
 2d8:	81 bb       	out	0x11, r24	; 17
		break;
		return VALID_DIO;

	}
		}
}
 2da:	08 95       	ret
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	08 95       	ret

000002e0 <DIO_WRITEPIN>:
DIO_ERROR_TYPE DIO_WRITEPIN(DIO_PIN_TYPE PIN,DIO_VOLTAGE_TYPE VOLTAGE)
{
	
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
 2e0:	98 2f       	mov	r25, r24
 2e2:	96 95       	lsr	r25
 2e4:	96 95       	lsr	r25
 2e6:	96 95       	lsr	r25
	PIN_NUM=PIN%8;
	if(PORT>4)
 2e8:	95 30       	cpi	r25, 0x05	; 5
 2ea:	08 f0       	brcs	.+2      	; 0x2ee <DIO_WRITEPIN+0xe>
 2ec:	8e c0       	rjmp	.+284    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	}
	else if(PIN_NUM>32)
	{
		return INVALID_PIN_NUMBER;
	}
	else if(VOLTAGE>2)
 2ee:	63 30       	cpi	r22, 0x03	; 3
 2f0:	08 f0       	brcs	.+2      	; 0x2f4 <DIO_WRITEPIN+0x14>
 2f2:	8d c0       	rjmp	.+282    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
{
	
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
 2f4:	87 70       	andi	r24, 0x07	; 7
		return INVALID_VOLTAGE;
	}
	else 
	{
	
	if(VOLTAGE==HIGH)
 2f6:	61 30       	cpi	r22, 0x01	; 1
 2f8:	09 f0       	breq	.+2      	; 0x2fc <DIO_WRITEPIN+0x1c>
 2fa:	40 c0       	rjmp	.+128    	; 0x37c <DIO_WRITEPIN+0x9c>
	{
		switch(PORT)
 2fc:	91 30       	cpi	r25, 0x01	; 1
 2fe:	a1 f0       	breq	.+40     	; 0x328 <DIO_WRITEPIN+0x48>
 300:	28 f0       	brcs	.+10     	; 0x30c <DIO_WRITEPIN+0x2c>
 302:	92 30       	cpi	r25, 0x02	; 2
 304:	f9 f0       	breq	.+62     	; 0x344 <DIO_WRITEPIN+0x64>
 306:	93 30       	cpi	r25, 0x03	; 3
 308:	59 f1       	breq	.+86     	; 0x360 <DIO_WRITEPIN+0x80>
 30a:	83 c0       	rjmp	.+262    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
		{
			case PA:
			set_bit(PORTA,PIN_NUM);
 30c:	4b b3       	in	r20, 0x1b	; 27
 30e:	21 e0       	ldi	r18, 0x01	; 1
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	b9 01       	movw	r22, r18
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_WRITEPIN+0x3a>
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	8a 95       	dec	r24
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_WRITEPIN+0x36>
 31e:	cb 01       	movw	r24, r22
 320:	84 2b       	or	r24, r20
 322:	8b bb       	out	0x1b, r24	; 27
			case PD:
			set_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 324:	80 e0       	ldi	r24, 0x00	; 0
	{
		switch(PORT)
		{
			case PA:
			set_bit(PORTA,PIN_NUM);
			break;
 326:	08 95       	ret
			case PB:
			set_bit(PORTB,PIN_NUM);
 328:	48 b3       	in	r20, 0x18	; 24
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	b9 01       	movw	r22, r18
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_WRITEPIN+0x56>
 332:	66 0f       	add	r22, r22
 334:	77 1f       	adc	r23, r23
 336:	8a 95       	dec	r24
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_WRITEPIN+0x52>
 33a:	cb 01       	movw	r24, r22
 33c:	84 2b       	or	r24, r20
 33e:	88 bb       	out	0x18, r24	; 24
			case PD:
			set_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 340:	80 e0       	ldi	r24, 0x00	; 0
			case PA:
			set_bit(PORTA,PIN_NUM);
			break;
			case PB:
			set_bit(PORTB,PIN_NUM);
			break;
 342:	08 95       	ret
			case PC:
			set_bit(PORTC,PIN_NUM);
 344:	45 b3       	in	r20, 0x15	; 21
 346:	21 e0       	ldi	r18, 0x01	; 1
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	b9 01       	movw	r22, r18
 34c:	02 c0       	rjmp	.+4      	; 0x352 <DIO_WRITEPIN+0x72>
 34e:	66 0f       	add	r22, r22
 350:	77 1f       	adc	r23, r23
 352:	8a 95       	dec	r24
 354:	e2 f7       	brpl	.-8      	; 0x34e <DIO_WRITEPIN+0x6e>
 356:	cb 01       	movw	r24, r22
 358:	84 2b       	or	r24, r20
 35a:	85 bb       	out	0x15, r24	; 21
			case PD:
			set_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 35c:	80 e0       	ldi	r24, 0x00	; 0
			case PB:
			set_bit(PORTB,PIN_NUM);
			break;
			case PC:
			set_bit(PORTC,PIN_NUM);
			break;
 35e:	08 95       	ret
			case PD:
			set_bit(PORTD,PIN_NUM);
 360:	42 b3       	in	r20, 0x12	; 18
 362:	21 e0       	ldi	r18, 0x01	; 1
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	b9 01       	movw	r22, r18
 368:	02 c0       	rjmp	.+4      	; 0x36e <DIO_WRITEPIN+0x8e>
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	8a 95       	dec	r24
 370:	e2 f7       	brpl	.-8      	; 0x36a <DIO_WRITEPIN+0x8a>
 372:	cb 01       	movw	r24, r22
 374:	84 2b       	or	r24, r20
 376:	82 bb       	out	0x12, r24	; 18
			break;

		}
		return VALID_DIO;
 378:	80 e0       	ldi	r24, 0x00	; 0
			case PC:
			set_bit(PORTC,PIN_NUM);
			break;
			case PD:
			set_bit(PORTD,PIN_NUM);
			break;
 37a:	08 95       	ret
		}
		return VALID_DIO;
	}


	else if(VOLTAGE==LOW)
 37c:	61 11       	cpse	r22, r1
 37e:	44 c0       	rjmp	.+136    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	{
		switch(PORT)
 380:	91 30       	cpi	r25, 0x01	; 1
 382:	a9 f0       	breq	.+42     	; 0x3ae <DIO_WRITEPIN+0xce>
 384:	28 f0       	brcs	.+10     	; 0x390 <DIO_WRITEPIN+0xb0>
 386:	92 30       	cpi	r25, 0x02	; 2
 388:	09 f1       	breq	.+66     	; 0x3cc <DIO_WRITEPIN+0xec>
 38a:	93 30       	cpi	r25, 0x03	; 3
 38c:	71 f1       	breq	.+92     	; 0x3ea <DIO_WRITEPIN+0x10a>
 38e:	43 c0       	rjmp	.+134    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
		{
			case PA:
			clear_bit(PORTA,PIN_NUM);
 390:	4b b3       	in	r20, 0x1b	; 27
 392:	21 e0       	ldi	r18, 0x01	; 1
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	b9 01       	movw	r22, r18
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_WRITEPIN+0xbe>
 39a:	66 0f       	add	r22, r22
 39c:	77 1f       	adc	r23, r23
 39e:	8a 95       	dec	r24
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <DIO_WRITEPIN+0xba>
 3a2:	cb 01       	movw	r24, r22
 3a4:	80 95       	com	r24
 3a6:	84 23       	and	r24, r20
 3a8:	8b bb       	out	0x1b, r24	; 27
			case PD:
			clear_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 3aa:	80 e0       	ldi	r24, 0x00	; 0
	{
		switch(PORT)
		{
			case PA:
			clear_bit(PORTA,PIN_NUM);
			break;
 3ac:	08 95       	ret
			case PB:
			clear_bit(PORTB,PIN_NUM);
 3ae:	48 b3       	in	r20, 0x18	; 24
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	b9 01       	movw	r22, r18
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <DIO_WRITEPIN+0xdc>
 3b8:	66 0f       	add	r22, r22
 3ba:	77 1f       	adc	r23, r23
 3bc:	8a 95       	dec	r24
 3be:	e2 f7       	brpl	.-8      	; 0x3b8 <DIO_WRITEPIN+0xd8>
 3c0:	cb 01       	movw	r24, r22
 3c2:	80 95       	com	r24
 3c4:	84 23       	and	r24, r20
 3c6:	88 bb       	out	0x18, r24	; 24
			case PD:
			clear_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 3c8:	80 e0       	ldi	r24, 0x00	; 0
			case PA:
			clear_bit(PORTA,PIN_NUM);
			break;
			case PB:
			clear_bit(PORTB,PIN_NUM);
			break;
 3ca:	08 95       	ret
			case PC:
			clear_bit(PORTC,PIN_NUM);
 3cc:	45 b3       	in	r20, 0x15	; 21
 3ce:	21 e0       	ldi	r18, 0x01	; 1
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	b9 01       	movw	r22, r18
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <DIO_WRITEPIN+0xfa>
 3d6:	66 0f       	add	r22, r22
 3d8:	77 1f       	adc	r23, r23
 3da:	8a 95       	dec	r24
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <DIO_WRITEPIN+0xf6>
 3de:	cb 01       	movw	r24, r22
 3e0:	80 95       	com	r24
 3e2:	84 23       	and	r24, r20
 3e4:	85 bb       	out	0x15, r24	; 21
			case PD:
			clear_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 3e6:	80 e0       	ldi	r24, 0x00	; 0
			case PB:
			clear_bit(PORTB,PIN_NUM);
			break;
			case PC:
			clear_bit(PORTC,PIN_NUM);
			break;
 3e8:	08 95       	ret
			case PD:
			clear_bit(PORTD,PIN_NUM);
 3ea:	42 b3       	in	r20, 0x12	; 18
 3ec:	21 e0       	ldi	r18, 0x01	; 1
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	b9 01       	movw	r22, r18
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <DIO_WRITEPIN+0x118>
 3f4:	66 0f       	add	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	8a 95       	dec	r24
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <DIO_WRITEPIN+0x114>
 3fc:	cb 01       	movw	r24, r22
 3fe:	80 95       	com	r24
 400:	84 23       	and	r24, r20
 402:	82 bb       	out	0x12, r24	; 18
			break;

		}
		return VALID_DIO;
 404:	80 e0       	ldi	r24, 0x00	; 0
			case PC:
			clear_bit(PORTC,PIN_NUM);
			break;
			case PD:
			clear_bit(PORTD,PIN_NUM);
			break;
 406:	08 95       	ret

		}
		return VALID_DIO;
	}
}
}
 408:	08 95       	ret
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
	{
		return INVALID_PORT;
 40a:	82 e0       	ldi	r24, 0x02	; 2
 40c:	08 95       	ret
	{
		return INVALID_PIN_NUMBER;
	}
	else if(VOLTAGE>2)
	{
		return INVALID_VOLTAGE;
 40e:	83 e0       	ldi	r24, 0x03	; 3
 410:	08 95       	ret
			case PD:
			set_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	08 95       	ret
			case PD:
			clear_bit(PORTD,PIN_NUM);
			break;

		}
		return VALID_DIO;
 416:	80 e0       	ldi	r24, 0x00	; 0
	}
}
}
 418:	08 95       	ret

0000041a <__vector_1>:
 41a:	1f 92       	push	r1
 41c:	0f 92       	push	r0
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	0f 92       	push	r0
 422:	11 24       	eor	r1, r1
 424:	2f 93       	push	r18
 426:	3f 93       	push	r19
 428:	4f 93       	push	r20
 42a:	5f 93       	push	r21
 42c:	6f 93       	push	r22
 42e:	7f 93       	push	r23
 430:	8f 93       	push	r24
 432:	9f 93       	push	r25
 434:	af 93       	push	r26
 436:	bf 93       	push	r27
 438:	ef 93       	push	r30
 43a:	ff 93       	push	r31
 43c:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <ptrf_INT_0>
 440:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <ptrf_INT_0+0x1>
 444:	30 97       	sbiw	r30, 0x00	; 0
 446:	09 f0       	breq	.+2      	; 0x44a <__vector_1+0x30>
 448:	09 95       	icall
 44a:	ff 91       	pop	r31
 44c:	ef 91       	pop	r30
 44e:	bf 91       	pop	r27
 450:	af 91       	pop	r26
 452:	9f 91       	pop	r25
 454:	8f 91       	pop	r24
 456:	7f 91       	pop	r23
 458:	6f 91       	pop	r22
 45a:	5f 91       	pop	r21
 45c:	4f 91       	pop	r20
 45e:	3f 91       	pop	r19
 460:	2f 91       	pop	r18
 462:	0f 90       	pop	r0
 464:	0f be       	out	0x3f, r0	; 63
 466:	0f 90       	pop	r0
 468:	1f 90       	pop	r1
 46a:	18 95       	reti

0000046c <__vector_2>:
 46c:	1f 92       	push	r1
 46e:	0f 92       	push	r0
 470:	0f b6       	in	r0, 0x3f	; 63
 472:	0f 92       	push	r0
 474:	11 24       	eor	r1, r1
 476:	2f 93       	push	r18
 478:	3f 93       	push	r19
 47a:	4f 93       	push	r20
 47c:	5f 93       	push	r21
 47e:	6f 93       	push	r22
 480:	7f 93       	push	r23
 482:	8f 93       	push	r24
 484:	9f 93       	push	r25
 486:	af 93       	push	r26
 488:	bf 93       	push	r27
 48a:	ef 93       	push	r30
 48c:	ff 93       	push	r31
 48e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ptrf_INT_0>
 492:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ptrf_INT_0+0x1>
 496:	89 2b       	or	r24, r25
 498:	29 f0       	breq	.+10     	; 0x4a4 <__vector_2+0x38>
 49a:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <ptrf_INT_1>
 49e:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <ptrf_INT_1+0x1>
 4a2:	09 95       	icall
 4a4:	ff 91       	pop	r31
 4a6:	ef 91       	pop	r30
 4a8:	bf 91       	pop	r27
 4aa:	af 91       	pop	r26
 4ac:	9f 91       	pop	r25
 4ae:	8f 91       	pop	r24
 4b0:	7f 91       	pop	r23
 4b2:	6f 91       	pop	r22
 4b4:	5f 91       	pop	r21
 4b6:	4f 91       	pop	r20
 4b8:	3f 91       	pop	r19
 4ba:	2f 91       	pop	r18
 4bc:	0f 90       	pop	r0
 4be:	0f be       	out	0x3f, r0	; 63
 4c0:	0f 90       	pop	r0
 4c2:	1f 90       	pop	r1
 4c4:	18 95       	reti

000004c6 <__vector_3>:
 4c6:	1f 92       	push	r1
 4c8:	0f 92       	push	r0
 4ca:	0f b6       	in	r0, 0x3f	; 63
 4cc:	0f 92       	push	r0
 4ce:	11 24       	eor	r1, r1
 4d0:	2f 93       	push	r18
 4d2:	3f 93       	push	r19
 4d4:	4f 93       	push	r20
 4d6:	5f 93       	push	r21
 4d8:	6f 93       	push	r22
 4da:	7f 93       	push	r23
 4dc:	8f 93       	push	r24
 4de:	9f 93       	push	r25
 4e0:	af 93       	push	r26
 4e2:	bf 93       	push	r27
 4e4:	ef 93       	push	r30
 4e6:	ff 93       	push	r31
 4e8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ptrf_INT_0>
 4ec:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ptrf_INT_0+0x1>
 4f0:	89 2b       	or	r24, r25
 4f2:	29 f0       	breq	.+10     	; 0x4fe <__vector_3+0x38>
 4f4:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 4f8:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 4fc:	09 95       	icall
 4fe:	ff 91       	pop	r31
 500:	ef 91       	pop	r30
 502:	bf 91       	pop	r27
 504:	af 91       	pop	r26
 506:	9f 91       	pop	r25
 508:	8f 91       	pop	r24
 50a:	7f 91       	pop	r23
 50c:	6f 91       	pop	r22
 50e:	5f 91       	pop	r21
 510:	4f 91       	pop	r20
 512:	3f 91       	pop	r19
 514:	2f 91       	pop	r18
 516:	0f 90       	pop	r0
 518:	0f be       	out	0x3f, r0	; 63
 51a:	0f 90       	pop	r0
 51c:	1f 90       	pop	r1
 51e:	18 95       	reti

00000520 <_exit>:
 520:	f8 94       	cli

00000522 <__stop_program>:
 522:	ff cf       	rjmp	.-2      	; 0x522 <__stop_program>
