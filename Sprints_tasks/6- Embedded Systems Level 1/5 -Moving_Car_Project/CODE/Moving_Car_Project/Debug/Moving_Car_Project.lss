
Moving_Car_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  00000b46  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000b46  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ba8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00000be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000181c  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a77  00000000  00000000  00002580  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e76  00000000  00000000  00002ff7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000394  00000000  00000000  00003e70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000094c  00000000  00000000  00004204  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015bb  00000000  00000000  00004b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  0000610b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
   4:	0c 94 38 02 	jmp	0x470	; 0x470 <__vector_1>
   8:	0c 94 61 02 	jmp	0x4c2	; 0x4c2 <__vector_2>
   c:	0c 94 8e 02 	jmp	0x51c	; 0x51c <__vector_3>
  10:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  14:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  18:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  1c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  20:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  24:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  28:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  2c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  30:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  34:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  38:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  3c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  40:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  44:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  48:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  4c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  50:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  54:	ef 02       	muls	r30, r31
  56:	fa 02       	muls	r31, r26
  58:	10 03       	mulsu	r17, r16
  5a:	05 03       	mulsu	r16, r21
  5c:	1b 03       	fmul	r17, r19
  5e:	26 03       	mulsu	r18, r22
  60:	31 03       	mulsu	r19, r17

00000062 <__ctors_end>:
  62:	11 24       	eor	r1, r1
  64:	1f be       	out	0x3f, r1	; 63
  66:	cf e5       	ldi	r28, 0x5F	; 95
  68:	d8 e0       	ldi	r29, 0x08	; 8
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	cd bf       	out	0x3d, r28	; 61

0000006e <__do_clear_bss>:
  6e:	20 e0       	ldi	r18, 0x00	; 0
  70:	a0 e6       	ldi	r26, 0x60	; 96
  72:	b0 e0       	ldi	r27, 0x00	; 0
  74:	01 c0       	rjmp	.+2      	; 0x78 <.do_clear_bss_start>

00000076 <.do_clear_bss_loop>:
  76:	1d 92       	st	X+, r1

00000078 <.do_clear_bss_start>:
  78:	a6 36       	cpi	r26, 0x66	; 102
  7a:	b2 07       	cpc	r27, r18
  7c:	e1 f7       	brne	.-8      	; 0x76 <.do_clear_bss_loop>
  7e:	0e 94 81 00 	call	0x102	; 0x102 <main>
  82:	0c 94 67 05 	jmp	0xace	; 0xace <_exit>

00000086 <__bad_interrupt>:
  86:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008a <LED_INIT>:
{
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
  8a:	88 32       	cpi	r24, 0x28	; 40
  8c:	28 f4       	brcc	.+10     	; 0x98 <LED_INIT+0xe>
	{
		return INVLAID_LED_PIN_NUMBER;
	}
	else
	{
		DIO_INITPIN(PIN,OUTPUT);
  8e:	60 e0       	ldi	r22, 0x00	; 0
  90:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
		return VALID_LED;
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	08 95       	ret
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
	{
		return INVALID_LED_PORT;
  98:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		DIO_INITPIN(PIN,OUTPUT);
		return VALID_LED;
	}
}
  9a:	08 95       	ret

0000009c <LED_ON>:
{
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
  9c:	88 32       	cpi	r24, 0x28	; 40
  9e:	28 f4       	brcc	.+10     	; 0xaa <LED_ON+0xe>
	{
		return INVLAID_LED_PIN_NUMBER;
	}
	else
	{
		DIO_WRITEPIN(PIN,HIGH);
  a0:	61 e0       	ldi	r22, 0x01	; 1
  a2:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_WRITEPIN>
		return VALID_LED;
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	08 95       	ret
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
	{
		return INVALID_LED_PORT;
  aa:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		DIO_WRITEPIN(PIN,HIGH);
		return VALID_LED;
	}
}
  ac:	08 95       	ret

000000ae <LED_OFF>:
{
	DIO_PIN_TYPE PIN_NUM;
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
  ae:	88 32       	cpi	r24, 0x28	; 40
  b0:	28 f4       	brcc	.+10     	; 0xbc <LED_OFF+0xe>
	{
		return INVLAID_LED_PIN_NUMBER;
	}
	else
	{
		DIO_WRITEPIN(PIN,LOW);
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_WRITEPIN>
		return VALID_LED;
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	08 95       	ret
	DIO_PORT_TYPE PORT;
	PORT=PIN/8;
	PIN_NUM=PIN%8;
	if(PORT>4)
	{
		return INVALID_LED_PORT;
  bc:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		DIO_WRITEPIN(PIN,LOW);
		return VALID_LED;
	}
  be:	08 95       	ret

000000c0 <Car_Motors_init>:
/**DESCRIPTION:-
  this function intializes the DIO pins connected to the motors to be output
  **/
void Car_Motors_init()
{
	DIO_INITPIN(motor1_0,OUTPUT);
  c0:	60 e0       	ldi	r22, 0x00	; 0
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor1_1,OUTPUT);
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor2_0,OUTPUT);
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor2_1,OUTPUT);
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	83 e0       	ldi	r24, 0x03	; 3
  dc:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor3_0,OUTPUT);
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	84 e0       	ldi	r24, 0x04	; 4
  e4:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor3_1,OUTPUT);
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	85 e0       	ldi	r24, 0x05	; 5
  ec:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor4_0,OUTPUT);
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	86 e0       	ldi	r24, 0x06	; 6
  f4:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
	DIO_INITPIN(motor4_1,OUTPUT);
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	87 e0       	ldi	r24, 0x07	; 7
  fc:	0e 94 99 00 	call	0x132	; 0x132 <DIO_INITPIN>
 100:	08 95       	ret

00000102 <main>:
#include "HAL/LED/LED.h"
#include "HAL/MOTOR/MOTOR.h"
#include "MCAL/TIMERS/timer.h"
int main(void)
{
	LED_INIT(pinc0);
 102:	80 e1       	ldi	r24, 0x10	; 16
 104:	0e 94 45 00 	call	0x8a	; 0x8a <LED_INIT>
	Car_Motors_init();
 108:	0e 94 60 00 	call	0xc0	; 0xc0 <Car_Motors_init>
	//Car_Moving_FWD();
	//Car_Rotating();
    while (1) 
    {
		
		LED_ON(pinc0);
 10c:	80 e1       	ldi	r24, 0x10	; 16
 10e:	0e 94 4e 00 	call	0x9c	; 0x9c <LED_ON>
		TIMER_2_DELAY_MS(5000);
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	70 e4       	ldi	r23, 0x40	; 64
 116:	8c e9       	ldi	r24, 0x9C	; 156
 118:	95 e4       	ldi	r25, 0x45	; 69
 11a:	0e 94 87 03 	call	0x70e	; 0x70e <TIMER_2_DELAY_MS>
		LED_OFF(pinc0);
 11e:	80 e1       	ldi	r24, 0x10	; 16
 120:	0e 94 57 00 	call	0xae	; 0xae <LED_OFF>
		TIMER_2_DELAY_MS(5000);
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	70 e4       	ldi	r23, 0x40	; 64
 128:	8c e9       	ldi	r24, 0x9C	; 156
 12a:	95 e4       	ldi	r25, 0x45	; 69
 12c:	0e 94 87 03 	call	0x70e	; 0x70e <TIMER_2_DELAY_MS>
 130:	ed cf       	rjmp	.-38     	; 0x10c <main+0xa>

00000132 <DIO_INITPIN>:
 132:	98 2f       	mov	r25, r24
 134:	96 95       	lsr	r25
 136:	96 95       	lsr	r25
 138:	96 95       	lsr	r25
 13a:	95 30       	cpi	r25, 0x05	; 5
 13c:	08 f0       	brcs	.+2      	; 0x140 <DIO_INITPIN+0xe>
 13e:	f9 c0       	rjmp	.+498    	; 0x332 <DIO_INITPIN+0x200>
 140:	87 70       	andi	r24, 0x07	; 7
 142:	61 30       	cpi	r22, 0x01	; 1
 144:	31 f0       	breq	.+12     	; 0x152 <DIO_INITPIN+0x20>
 146:	08 f4       	brcc	.+2      	; 0x14a <DIO_INITPIN+0x18>
 148:	a4 c0       	rjmp	.+328    	; 0x292 <DIO_INITPIN+0x160>
 14a:	62 30       	cpi	r22, 0x02	; 2
 14c:	09 f4       	brne	.+2      	; 0x150 <DIO_INITPIN+0x1e>
 14e:	51 c0       	rjmp	.+162    	; 0x1f2 <DIO_INITPIN+0xc0>
 150:	ef c0       	rjmp	.+478    	; 0x330 <DIO_INITPIN+0x1fe>
 152:	91 30       	cpi	r25, 0x01	; 1
 154:	c1 f0       	breq	.+48     	; 0x186 <DIO_INITPIN+0x54>
 156:	28 f0       	brcs	.+10     	; 0x162 <DIO_INITPIN+0x30>
 158:	92 30       	cpi	r25, 0x02	; 2
 15a:	39 f1       	breq	.+78     	; 0x1aa <DIO_INITPIN+0x78>
 15c:	93 30       	cpi	r25, 0x03	; 3
 15e:	b9 f1       	breq	.+110    	; 0x1ce <DIO_INITPIN+0x9c>
 160:	e7 c0       	rjmp	.+462    	; 0x330 <DIO_INITPIN+0x1fe>
 162:	4a b3       	in	r20, 0x1a	; 26
 164:	21 e0       	ldi	r18, 0x01	; 1
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	b9 01       	movw	r22, r18
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_INITPIN+0x3e>
 16c:	66 0f       	add	r22, r22
 16e:	77 1f       	adc	r23, r23
 170:	8a 95       	dec	r24
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_INITPIN+0x3a>
 174:	cb 01       	movw	r24, r22
 176:	80 95       	com	r24
 178:	94 2f       	mov	r25, r20
 17a:	98 23       	and	r25, r24
 17c:	9a bb       	out	0x1a, r25	; 26
 17e:	9b b3       	in	r25, 0x1b	; 27
 180:	89 23       	and	r24, r25
 182:	8b bb       	out	0x1b, r24	; 27
 184:	d5 c0       	rjmp	.+426    	; 0x330 <DIO_INITPIN+0x1fe>
 186:	47 b3       	in	r20, 0x17	; 23
 188:	21 e0       	ldi	r18, 0x01	; 1
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	b9 01       	movw	r22, r18
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_INITPIN+0x62>
 190:	66 0f       	add	r22, r22
 192:	77 1f       	adc	r23, r23
 194:	8a 95       	dec	r24
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_INITPIN+0x5e>
 198:	cb 01       	movw	r24, r22
 19a:	80 95       	com	r24
 19c:	94 2f       	mov	r25, r20
 19e:	98 23       	and	r25, r24
 1a0:	97 bb       	out	0x17, r25	; 23
 1a2:	98 b3       	in	r25, 0x18	; 24
 1a4:	89 23       	and	r24, r25
 1a6:	88 bb       	out	0x18, r24	; 24
 1a8:	c3 c0       	rjmp	.+390    	; 0x330 <DIO_INITPIN+0x1fe>
 1aa:	44 b3       	in	r20, 0x14	; 20
 1ac:	21 e0       	ldi	r18, 0x01	; 1
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	b9 01       	movw	r22, r18
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <DIO_INITPIN+0x86>
 1b4:	66 0f       	add	r22, r22
 1b6:	77 1f       	adc	r23, r23
 1b8:	8a 95       	dec	r24
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <DIO_INITPIN+0x82>
 1bc:	cb 01       	movw	r24, r22
 1be:	80 95       	com	r24
 1c0:	94 2f       	mov	r25, r20
 1c2:	98 23       	and	r25, r24
 1c4:	94 bb       	out	0x14, r25	; 20
 1c6:	95 b3       	in	r25, 0x15	; 21
 1c8:	89 23       	and	r24, r25
 1ca:	85 bb       	out	0x15, r24	; 21
 1cc:	b1 c0       	rjmp	.+354    	; 0x330 <DIO_INITPIN+0x1fe>
 1ce:	41 b3       	in	r20, 0x11	; 17
 1d0:	21 e0       	ldi	r18, 0x01	; 1
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	b9 01       	movw	r22, r18
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_INITPIN+0xaa>
 1d8:	66 0f       	add	r22, r22
 1da:	77 1f       	adc	r23, r23
 1dc:	8a 95       	dec	r24
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_INITPIN+0xa6>
 1e0:	cb 01       	movw	r24, r22
 1e2:	80 95       	com	r24
 1e4:	94 2f       	mov	r25, r20
 1e6:	98 23       	and	r25, r24
 1e8:	91 bb       	out	0x11, r25	; 17
 1ea:	92 b3       	in	r25, 0x12	; 18
 1ec:	89 23       	and	r24, r25
 1ee:	82 bb       	out	0x12, r24	; 18
 1f0:	9f c0       	rjmp	.+318    	; 0x330 <DIO_INITPIN+0x1fe>
 1f2:	91 30       	cpi	r25, 0x01	; 1
 1f4:	c1 f0       	breq	.+48     	; 0x226 <DIO_INITPIN+0xf4>
 1f6:	28 f0       	brcs	.+10     	; 0x202 <DIO_INITPIN+0xd0>
 1f8:	92 30       	cpi	r25, 0x02	; 2
 1fa:	39 f1       	breq	.+78     	; 0x24a <DIO_INITPIN+0x118>
 1fc:	93 30       	cpi	r25, 0x03	; 3
 1fe:	b9 f1       	breq	.+110    	; 0x26e <DIO_INITPIN+0x13c>
 200:	97 c0       	rjmp	.+302    	; 0x330 <DIO_INITPIN+0x1fe>
 202:	4a b3       	in	r20, 0x1a	; 26
 204:	21 e0       	ldi	r18, 0x01	; 1
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	b9 01       	movw	r22, r18
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_INITPIN+0xde>
 20c:	66 0f       	add	r22, r22
 20e:	77 1f       	adc	r23, r23
 210:	8a 95       	dec	r24
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_INITPIN+0xda>
 214:	cb 01       	movw	r24, r22
 216:	96 2f       	mov	r25, r22
 218:	90 95       	com	r25
 21a:	94 23       	and	r25, r20
 21c:	9a bb       	out	0x1a, r25	; 26
 21e:	9b b3       	in	r25, 0x1b	; 27
 220:	89 2b       	or	r24, r25
 222:	8b bb       	out	0x1b, r24	; 27
 224:	85 c0       	rjmp	.+266    	; 0x330 <DIO_INITPIN+0x1fe>
 226:	47 b3       	in	r20, 0x17	; 23
 228:	21 e0       	ldi	r18, 0x01	; 1
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	b9 01       	movw	r22, r18
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_INITPIN+0x102>
 230:	66 0f       	add	r22, r22
 232:	77 1f       	adc	r23, r23
 234:	8a 95       	dec	r24
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_INITPIN+0xfe>
 238:	cb 01       	movw	r24, r22
 23a:	96 2f       	mov	r25, r22
 23c:	90 95       	com	r25
 23e:	94 23       	and	r25, r20
 240:	97 bb       	out	0x17, r25	; 23
 242:	98 b3       	in	r25, 0x18	; 24
 244:	89 2b       	or	r24, r25
 246:	88 bb       	out	0x18, r24	; 24
 248:	73 c0       	rjmp	.+230    	; 0x330 <DIO_INITPIN+0x1fe>
 24a:	44 b3       	in	r20, 0x14	; 20
 24c:	21 e0       	ldi	r18, 0x01	; 1
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	b9 01       	movw	r22, r18
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_INITPIN+0x126>
 254:	66 0f       	add	r22, r22
 256:	77 1f       	adc	r23, r23
 258:	8a 95       	dec	r24
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_INITPIN+0x122>
 25c:	cb 01       	movw	r24, r22
 25e:	96 2f       	mov	r25, r22
 260:	90 95       	com	r25
 262:	94 23       	and	r25, r20
 264:	94 bb       	out	0x14, r25	; 20
 266:	95 b3       	in	r25, 0x15	; 21
 268:	89 2b       	or	r24, r25
 26a:	85 bb       	out	0x15, r24	; 21
 26c:	61 c0       	rjmp	.+194    	; 0x330 <DIO_INITPIN+0x1fe>
 26e:	41 b3       	in	r20, 0x11	; 17
 270:	21 e0       	ldi	r18, 0x01	; 1
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	b9 01       	movw	r22, r18
 276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_INITPIN+0x14a>
 278:	66 0f       	add	r22, r22
 27a:	77 1f       	adc	r23, r23
 27c:	8a 95       	dec	r24
 27e:	e2 f7       	brpl	.-8      	; 0x278 <DIO_INITPIN+0x146>
 280:	cb 01       	movw	r24, r22
 282:	96 2f       	mov	r25, r22
 284:	90 95       	com	r25
 286:	94 23       	and	r25, r20
 288:	91 bb       	out	0x11, r25	; 17
 28a:	92 b3       	in	r25, 0x12	; 18
 28c:	89 2b       	or	r24, r25
 28e:	82 bb       	out	0x12, r24	; 18
 290:	4f c0       	rjmp	.+158    	; 0x330 <DIO_INITPIN+0x1fe>
 292:	91 30       	cpi	r25, 0x01	; 1
 294:	c1 f0       	breq	.+48     	; 0x2c6 <DIO_INITPIN+0x194>
 296:	28 f0       	brcs	.+10     	; 0x2a2 <DIO_INITPIN+0x170>
 298:	92 30       	cpi	r25, 0x02	; 2
 29a:	39 f1       	breq	.+78     	; 0x2ea <DIO_INITPIN+0x1b8>
 29c:	93 30       	cpi	r25, 0x03	; 3
 29e:	b9 f1       	breq	.+110    	; 0x30e <DIO_INITPIN+0x1dc>
 2a0:	47 c0       	rjmp	.+142    	; 0x330 <DIO_INITPIN+0x1fe>
 2a2:	4b b3       	in	r20, 0x1b	; 27
 2a4:	21 e0       	ldi	r18, 0x01	; 1
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	b9 01       	movw	r22, r18
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_INITPIN+0x17e>
 2ac:	66 0f       	add	r22, r22
 2ae:	77 1f       	adc	r23, r23
 2b0:	8a 95       	dec	r24
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_INITPIN+0x17a>
 2b4:	cb 01       	movw	r24, r22
 2b6:	96 2f       	mov	r25, r22
 2b8:	90 95       	com	r25
 2ba:	94 23       	and	r25, r20
 2bc:	9b bb       	out	0x1b, r25	; 27
 2be:	9a b3       	in	r25, 0x1a	; 26
 2c0:	89 2b       	or	r24, r25
 2c2:	8a bb       	out	0x1a, r24	; 26
 2c4:	35 c0       	rjmp	.+106    	; 0x330 <DIO_INITPIN+0x1fe>
 2c6:	48 b3       	in	r20, 0x18	; 24
 2c8:	21 e0       	ldi	r18, 0x01	; 1
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	b9 01       	movw	r22, r18
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_INITPIN+0x1a2>
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	8a 95       	dec	r24
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_INITPIN+0x19e>
 2d8:	cb 01       	movw	r24, r22
 2da:	96 2f       	mov	r25, r22
 2dc:	90 95       	com	r25
 2de:	94 23       	and	r25, r20
 2e0:	98 bb       	out	0x18, r25	; 24
 2e2:	97 b3       	in	r25, 0x17	; 23
 2e4:	89 2b       	or	r24, r25
 2e6:	87 bb       	out	0x17, r24	; 23
 2e8:	23 c0       	rjmp	.+70     	; 0x330 <DIO_INITPIN+0x1fe>
 2ea:	45 b3       	in	r20, 0x15	; 21
 2ec:	21 e0       	ldi	r18, 0x01	; 1
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	b9 01       	movw	r22, r18
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_INITPIN+0x1c6>
 2f4:	66 0f       	add	r22, r22
 2f6:	77 1f       	adc	r23, r23
 2f8:	8a 95       	dec	r24
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_INITPIN+0x1c2>
 2fc:	cb 01       	movw	r24, r22
 2fe:	96 2f       	mov	r25, r22
 300:	90 95       	com	r25
 302:	94 23       	and	r25, r20
 304:	95 bb       	out	0x15, r25	; 21
 306:	94 b3       	in	r25, 0x14	; 20
 308:	89 2b       	or	r24, r25
 30a:	84 bb       	out	0x14, r24	; 20
 30c:	11 c0       	rjmp	.+34     	; 0x330 <DIO_INITPIN+0x1fe>
 30e:	42 b3       	in	r20, 0x12	; 18
 310:	21 e0       	ldi	r18, 0x01	; 1
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	b9 01       	movw	r22, r18
 316:	02 c0       	rjmp	.+4      	; 0x31c <DIO_INITPIN+0x1ea>
 318:	66 0f       	add	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	8a 95       	dec	r24
 31e:	e2 f7       	brpl	.-8      	; 0x318 <DIO_INITPIN+0x1e6>
 320:	cb 01       	movw	r24, r22
 322:	96 2f       	mov	r25, r22
 324:	90 95       	com	r25
 326:	94 23       	and	r25, r20
 328:	92 bb       	out	0x12, r25	; 18
 32a:	91 b3       	in	r25, 0x11	; 17
 32c:	89 2b       	or	r24, r25
 32e:	81 bb       	out	0x11, r24	; 17
 330:	08 95       	ret
 332:	82 e0       	ldi	r24, 0x02	; 2
 334:	08 95       	ret

00000336 <DIO_WRITEPIN>:
 336:	98 2f       	mov	r25, r24
 338:	96 95       	lsr	r25
 33a:	96 95       	lsr	r25
 33c:	96 95       	lsr	r25
 33e:	95 30       	cpi	r25, 0x05	; 5
 340:	08 f0       	brcs	.+2      	; 0x344 <DIO_WRITEPIN+0xe>
 342:	8e c0       	rjmp	.+284    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 344:	63 30       	cpi	r22, 0x03	; 3
 346:	08 f0       	brcs	.+2      	; 0x34a <DIO_WRITEPIN+0x14>
 348:	8d c0       	rjmp	.+282    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 34a:	87 70       	andi	r24, 0x07	; 7
 34c:	61 30       	cpi	r22, 0x01	; 1
 34e:	09 f0       	breq	.+2      	; 0x352 <DIO_WRITEPIN+0x1c>
 350:	40 c0       	rjmp	.+128    	; 0x3d2 <DIO_WRITEPIN+0x9c>
 352:	91 30       	cpi	r25, 0x01	; 1
 354:	a1 f0       	breq	.+40     	; 0x37e <DIO_WRITEPIN+0x48>
 356:	28 f0       	brcs	.+10     	; 0x362 <DIO_WRITEPIN+0x2c>
 358:	92 30       	cpi	r25, 0x02	; 2
 35a:	f9 f0       	breq	.+62     	; 0x39a <DIO_WRITEPIN+0x64>
 35c:	93 30       	cpi	r25, 0x03	; 3
 35e:	59 f1       	breq	.+86     	; 0x3b6 <DIO_WRITEPIN+0x80>
 360:	83 c0       	rjmp	.+262    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 362:	4b b3       	in	r20, 0x1b	; 27
 364:	21 e0       	ldi	r18, 0x01	; 1
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	b9 01       	movw	r22, r18
 36a:	02 c0       	rjmp	.+4      	; 0x370 <DIO_WRITEPIN+0x3a>
 36c:	66 0f       	add	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	8a 95       	dec	r24
 372:	e2 f7       	brpl	.-8      	; 0x36c <DIO_WRITEPIN+0x36>
 374:	cb 01       	movw	r24, r22
 376:	84 2b       	or	r24, r20
 378:	8b bb       	out	0x1b, r24	; 27
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	08 95       	ret
 37e:	48 b3       	in	r20, 0x18	; 24
 380:	21 e0       	ldi	r18, 0x01	; 1
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	b9 01       	movw	r22, r18
 386:	02 c0       	rjmp	.+4      	; 0x38c <DIO_WRITEPIN+0x56>
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	8a 95       	dec	r24
 38e:	e2 f7       	brpl	.-8      	; 0x388 <DIO_WRITEPIN+0x52>
 390:	cb 01       	movw	r24, r22
 392:	84 2b       	or	r24, r20
 394:	88 bb       	out	0x18, r24	; 24
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	08 95       	ret
 39a:	45 b3       	in	r20, 0x15	; 21
 39c:	21 e0       	ldi	r18, 0x01	; 1
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	b9 01       	movw	r22, r18
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <DIO_WRITEPIN+0x72>
 3a4:	66 0f       	add	r22, r22
 3a6:	77 1f       	adc	r23, r23
 3a8:	8a 95       	dec	r24
 3aa:	e2 f7       	brpl	.-8      	; 0x3a4 <DIO_WRITEPIN+0x6e>
 3ac:	cb 01       	movw	r24, r22
 3ae:	84 2b       	or	r24, r20
 3b0:	85 bb       	out	0x15, r24	; 21
 3b2:	80 e0       	ldi	r24, 0x00	; 0
 3b4:	08 95       	ret
 3b6:	42 b3       	in	r20, 0x12	; 18
 3b8:	21 e0       	ldi	r18, 0x01	; 1
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	b9 01       	movw	r22, r18
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_WRITEPIN+0x8e>
 3c0:	66 0f       	add	r22, r22
 3c2:	77 1f       	adc	r23, r23
 3c4:	8a 95       	dec	r24
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_WRITEPIN+0x8a>
 3c8:	cb 01       	movw	r24, r22
 3ca:	84 2b       	or	r24, r20
 3cc:	82 bb       	out	0x12, r24	; 18
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	08 95       	ret
 3d2:	61 11       	cpse	r22, r1
 3d4:	44 c0       	rjmp	.+136    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3d6:	91 30       	cpi	r25, 0x01	; 1
 3d8:	a9 f0       	breq	.+42     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3da:	28 f0       	brcs	.+10     	; 0x3e6 <DIO_WRITEPIN+0xb0>
 3dc:	92 30       	cpi	r25, 0x02	; 2
 3de:	09 f1       	breq	.+66     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3e0:	93 30       	cpi	r25, 0x03	; 3
 3e2:	71 f1       	breq	.+92     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3e4:	43 c0       	rjmp	.+134    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 3e6:	4b b3       	in	r20, 0x1b	; 27
 3e8:	21 e0       	ldi	r18, 0x01	; 1
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	b9 01       	movw	r22, r18
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <DIO_WRITEPIN+0xbe>
 3f0:	66 0f       	add	r22, r22
 3f2:	77 1f       	adc	r23, r23
 3f4:	8a 95       	dec	r24
 3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <DIO_WRITEPIN+0xba>
 3f8:	cb 01       	movw	r24, r22
 3fa:	80 95       	com	r24
 3fc:	84 23       	and	r24, r20
 3fe:	8b bb       	out	0x1b, r24	; 27
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	08 95       	ret
 404:	48 b3       	in	r20, 0x18	; 24
 406:	21 e0       	ldi	r18, 0x01	; 1
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	b9 01       	movw	r22, r18
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	66 0f       	add	r22, r22
 410:	77 1f       	adc	r23, r23
 412:	8a 95       	dec	r24
 414:	e2 f7       	brpl	.-8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 416:	cb 01       	movw	r24, r22
 418:	80 95       	com	r24
 41a:	84 23       	and	r24, r20
 41c:	88 bb       	out	0x18, r24	; 24
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	08 95       	ret
 422:	45 b3       	in	r20, 0x15	; 21
 424:	21 e0       	ldi	r18, 0x01	; 1
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	b9 01       	movw	r22, r18
 42a:	02 c0       	rjmp	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	8a 95       	dec	r24
 432:	e2 f7       	brpl	.-8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 434:	cb 01       	movw	r24, r22
 436:	80 95       	com	r24
 438:	84 23       	and	r24, r20
 43a:	85 bb       	out	0x15, r24	; 21
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	08 95       	ret
 440:	42 b3       	in	r20, 0x12	; 18
 442:	21 e0       	ldi	r18, 0x01	; 1
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	b9 01       	movw	r22, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	66 0f       	add	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	8a 95       	dec	r24
 450:	e2 f7       	brpl	.-8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 452:	cb 01       	movw	r24, r22
 454:	80 95       	com	r24
 456:	84 23       	and	r24, r20
 458:	82 bb       	out	0x12, r24	; 18
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	08 95       	ret
 45e:	08 95       	ret
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	08 95       	ret
 464:	83 e0       	ldi	r24, 0x03	; 3
 466:	08 95       	ret
 468:	80 e0       	ldi	r24, 0x00	; 0
 46a:	08 95       	ret
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	08 95       	ret

00000470 <__vector_1>:
 470:	1f 92       	push	r1
 472:	0f 92       	push	r0
 474:	0f b6       	in	r0, 0x3f	; 63
 476:	0f 92       	push	r0
 478:	11 24       	eor	r1, r1
 47a:	2f 93       	push	r18
 47c:	3f 93       	push	r19
 47e:	4f 93       	push	r20
 480:	5f 93       	push	r21
 482:	6f 93       	push	r22
 484:	7f 93       	push	r23
 486:	8f 93       	push	r24
 488:	9f 93       	push	r25
 48a:	af 93       	push	r26
 48c:	bf 93       	push	r27
 48e:	ef 93       	push	r30
 490:	ff 93       	push	r31
 492:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <ptrf_INT_0>
 496:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <ptrf_INT_0+0x1>
 49a:	30 97       	sbiw	r30, 0x00	; 0
 49c:	09 f0       	breq	.+2      	; 0x4a0 <__vector_1+0x30>
 49e:	09 95       	icall
 4a0:	ff 91       	pop	r31
 4a2:	ef 91       	pop	r30
 4a4:	bf 91       	pop	r27
 4a6:	af 91       	pop	r26
 4a8:	9f 91       	pop	r25
 4aa:	8f 91       	pop	r24
 4ac:	7f 91       	pop	r23
 4ae:	6f 91       	pop	r22
 4b0:	5f 91       	pop	r21
 4b2:	4f 91       	pop	r20
 4b4:	3f 91       	pop	r19
 4b6:	2f 91       	pop	r18
 4b8:	0f 90       	pop	r0
 4ba:	0f be       	out	0x3f, r0	; 63
 4bc:	0f 90       	pop	r0
 4be:	1f 90       	pop	r1
 4c0:	18 95       	reti

000004c2 <__vector_2>:
 4c2:	1f 92       	push	r1
 4c4:	0f 92       	push	r0
 4c6:	0f b6       	in	r0, 0x3f	; 63
 4c8:	0f 92       	push	r0
 4ca:	11 24       	eor	r1, r1
 4cc:	2f 93       	push	r18
 4ce:	3f 93       	push	r19
 4d0:	4f 93       	push	r20
 4d2:	5f 93       	push	r21
 4d4:	6f 93       	push	r22
 4d6:	7f 93       	push	r23
 4d8:	8f 93       	push	r24
 4da:	9f 93       	push	r25
 4dc:	af 93       	push	r26
 4de:	bf 93       	push	r27
 4e0:	ef 93       	push	r30
 4e2:	ff 93       	push	r31
 4e4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ptrf_INT_0>
 4e8:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ptrf_INT_0+0x1>
 4ec:	89 2b       	or	r24, r25
 4ee:	29 f0       	breq	.+10     	; 0x4fa <__vector_2+0x38>
 4f0:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <ptrf_INT_1>
 4f4:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <ptrf_INT_1+0x1>
 4f8:	09 95       	icall
 4fa:	ff 91       	pop	r31
 4fc:	ef 91       	pop	r30
 4fe:	bf 91       	pop	r27
 500:	af 91       	pop	r26
 502:	9f 91       	pop	r25
 504:	8f 91       	pop	r24
 506:	7f 91       	pop	r23
 508:	6f 91       	pop	r22
 50a:	5f 91       	pop	r21
 50c:	4f 91       	pop	r20
 50e:	3f 91       	pop	r19
 510:	2f 91       	pop	r18
 512:	0f 90       	pop	r0
 514:	0f be       	out	0x3f, r0	; 63
 516:	0f 90       	pop	r0
 518:	1f 90       	pop	r1
 51a:	18 95       	reti

0000051c <__vector_3>:
 51c:	1f 92       	push	r1
 51e:	0f 92       	push	r0
 520:	0f b6       	in	r0, 0x3f	; 63
 522:	0f 92       	push	r0
 524:	11 24       	eor	r1, r1
 526:	2f 93       	push	r18
 528:	3f 93       	push	r19
 52a:	4f 93       	push	r20
 52c:	5f 93       	push	r21
 52e:	6f 93       	push	r22
 530:	7f 93       	push	r23
 532:	8f 93       	push	r24
 534:	9f 93       	push	r25
 536:	af 93       	push	r26
 538:	bf 93       	push	r27
 53a:	ef 93       	push	r30
 53c:	ff 93       	push	r31
 53e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <ptrf_INT_0>
 542:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <ptrf_INT_0+0x1>
 546:	89 2b       	or	r24, r25
 548:	29 f0       	breq	.+10     	; 0x554 <__vector_3+0x38>
 54a:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 54e:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 552:	09 95       	icall
 554:	ff 91       	pop	r31
 556:	ef 91       	pop	r30
 558:	bf 91       	pop	r27
 55a:	af 91       	pop	r26
 55c:	9f 91       	pop	r25
 55e:	8f 91       	pop	r24
 560:	7f 91       	pop	r23
 562:	6f 91       	pop	r22
 564:	5f 91       	pop	r21
 566:	4f 91       	pop	r20
 568:	3f 91       	pop	r19
 56a:	2f 91       	pop	r18
 56c:	0f 90       	pop	r0
 56e:	0f be       	out	0x3f, r0	; 63
 570:	0f 90       	pop	r0
 572:	1f 90       	pop	r1
 574:	18 95       	reti

00000576 <TIMER_2_init>:
		TCNT2 = value ;
		}else{
		errorStatus = INVALID_VALUE;
	}
	return errorStatus ;
}
 576:	81 30       	cpi	r24, 0x01	; 1
 578:	f1 f0       	breq	.+60     	; 0x5b6 <TIMER_2_init+0x40>
 57a:	28 f0       	brcs	.+10     	; 0x586 <TIMER_2_init+0x10>
 57c:	82 30       	cpi	r24, 0x02	; 2
 57e:	99 f0       	breq	.+38     	; 0x5a6 <TIMER_2_init+0x30>
 580:	83 30       	cpi	r24, 0x03	; 3
 582:	49 f0       	breq	.+18     	; 0x596 <TIMER_2_init+0x20>
 584:	20 c0       	rjmp	.+64     	; 0x5c6 <TIMER_2_init+0x50>
 586:	85 b5       	in	r24, 0x25	; 37
 588:	8f 7b       	andi	r24, 0xBF	; 191
 58a:	85 bd       	out	0x25, r24	; 37
 58c:	85 b5       	in	r24, 0x25	; 37
 58e:	87 7f       	andi	r24, 0xF7	; 247
 590:	85 bd       	out	0x25, r24	; 37
 592:	84 e0       	ldi	r24, 0x04	; 4
 594:	08 95       	ret
 596:	85 b5       	in	r24, 0x25	; 37
 598:	80 64       	ori	r24, 0x40	; 64
 59a:	85 bd       	out	0x25, r24	; 37
 59c:	85 b5       	in	r24, 0x25	; 37
 59e:	87 7f       	andi	r24, 0xF7	; 247
 5a0:	85 bd       	out	0x25, r24	; 37
 5a2:	84 e0       	ldi	r24, 0x04	; 4
 5a4:	08 95       	ret
 5a6:	85 b5       	in	r24, 0x25	; 37
 5a8:	8f 7b       	andi	r24, 0xBF	; 191
 5aa:	85 bd       	out	0x25, r24	; 37
 5ac:	85 b5       	in	r24, 0x25	; 37
 5ae:	88 60       	ori	r24, 0x08	; 8
 5b0:	85 bd       	out	0x25, r24	; 37
 5b2:	84 e0       	ldi	r24, 0x04	; 4
 5b4:	08 95       	ret
 5b6:	85 b5       	in	r24, 0x25	; 37
 5b8:	80 64       	ori	r24, 0x40	; 64
 5ba:	85 bd       	out	0x25, r24	; 37
 5bc:	85 b5       	in	r24, 0x25	; 37
 5be:	88 60       	ori	r24, 0x08	; 8
 5c0:	85 bd       	out	0x25, r24	; 37
 5c2:	84 e0       	ldi	r24, 0x04	; 4
 5c4:	08 95       	ret
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	08 95       	ret

000005ca <TIMER_2_start>:


Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
	
	switch(prescaler){
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	87 30       	cpi	r24, 0x07	; 7
 5ce:	91 05       	cpc	r25, r1
 5d0:	08 f0       	brcs	.+2      	; 0x5d4 <TIMER_2_start+0xa>
 5d2:	52 c0       	rjmp	.+164    	; 0x678 <TIMER_2_start+0xae>
 5d4:	fc 01       	movw	r30, r24
 5d6:	e6 5d       	subi	r30, 0xD6	; 214
 5d8:	ff 4f       	sbci	r31, 0xFF	; 255
 5da:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__tablejump2__>
		
		case PRECALER_1 :
		set_bit(TCCR2,CS20);
 5de:	85 b5       	in	r24, 0x25	; 37
 5e0:	81 60       	ori	r24, 0x01	; 1
 5e2:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS21);
 5e4:	85 b5       	in	r24, 0x25	; 37
 5e6:	8d 7f       	andi	r24, 0xFD	; 253
 5e8:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS22);
 5ea:	85 b5       	in	r24, 0x25	; 37
 5ec:	8b 7f       	andi	r24, 0xFB	; 251
 5ee:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 5f0:	84 e0       	ldi	r24, 0x04	; 4
		
		case PRECALER_1 :
		set_bit(TCCR2,CS20);
		clear_bit(TCCR2,CS21);
		clear_bit(TCCR2,CS22);
		break;
 5f2:	08 95       	ret
		
		case PRECALER_8 :
		set_bit(TCCR2,CS21);
 5f4:	85 b5       	in	r24, 0x25	; 37
 5f6:	82 60       	ori	r24, 0x02	; 2
 5f8:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS20);
 5fa:	85 b5       	in	r24, 0x25	; 37
 5fc:	8e 7f       	andi	r24, 0xFE	; 254
 5fe:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS22);
 600:	85 b5       	in	r24, 0x25	; 37
 602:	8b 7f       	andi	r24, 0xFB	; 251
 604:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 606:	84 e0       	ldi	r24, 0x04	; 4
		
		case PRECALER_8 :
		set_bit(TCCR2,CS21);
		clear_bit(TCCR2,CS20);
		clear_bit(TCCR2,CS22);
		break;
 608:	08 95       	ret
		
		case PRECALER_32 :
		set_bit(TCCR2,CS20);
 60a:	85 b5       	in	r24, 0x25	; 37
 60c:	81 60       	ori	r24, 0x01	; 1
 60e:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR2,CS21);
 610:	85 b5       	in	r24, 0x25	; 37
 612:	82 60       	ori	r24, 0x02	; 2
 614:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS22);
 616:	85 b5       	in	r24, 0x25	; 37
 618:	8b 7f       	andi	r24, 0xFB	; 251
 61a:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 61c:	84 e0       	ldi	r24, 0x04	; 4
		
		case PRECALER_32 :
		set_bit(TCCR2,CS20);
		set_bit(TCCR2,CS21);
		clear_bit(TCCR2,CS22);
		break;
 61e:	08 95       	ret
		
		case PRECALER_64 :
		set_bit(TCCR2,CS22);
 620:	85 b5       	in	r24, 0x25	; 37
 622:	84 60       	ori	r24, 0x04	; 4
 624:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS21);
 626:	85 b5       	in	r24, 0x25	; 37
 628:	8d 7f       	andi	r24, 0xFD	; 253
 62a:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS20);
 62c:	85 b5       	in	r24, 0x25	; 37
 62e:	8e 7f       	andi	r24, 0xFE	; 254
 630:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 632:	84 e0       	ldi	r24, 0x04	; 4
		
		case PRECALER_64 :
		set_bit(TCCR2,CS22);
		clear_bit(TCCR2,CS21);
		clear_bit(TCCR2,CS20);
		break;
 634:	08 95       	ret
		
		case PRECALER_128 :
		set_bit(TCCR2,CS20);
 636:	85 b5       	in	r24, 0x25	; 37
 638:	81 60       	ori	r24, 0x01	; 1
 63a:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS21);
 63c:	85 b5       	in	r24, 0x25	; 37
 63e:	8d 7f       	andi	r24, 0xFD	; 253
 640:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR2,CS22);
 642:	85 b5       	in	r24, 0x25	; 37
 644:	84 60       	ori	r24, 0x04	; 4
 646:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 648:	84 e0       	ldi	r24, 0x04	; 4
		
		case PRECALER_128 :
		set_bit(TCCR2,CS20);
		clear_bit(TCCR2,CS21);
		set_bit(TCCR2,CS22);
		break;
 64a:	08 95       	ret
		
		case PRECALER_256 :
		set_bit(TCCR2,CS22);
 64c:	85 b5       	in	r24, 0x25	; 37
 64e:	84 60       	ori	r24, 0x04	; 4
 650:	85 bd       	out	0x25, r24	; 37
		clear_bit(TCCR2,CS20);
 652:	85 b5       	in	r24, 0x25	; 37
 654:	8e 7f       	andi	r24, 0xFE	; 254
 656:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR2,CS21);
 658:	85 b5       	in	r24, 0x25	; 37
 65a:	82 60       	ori	r24, 0x02	; 2
 65c:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 65e:	84 e0       	ldi	r24, 0x04	; 4
		
		case PRECALER_256 :
		set_bit(TCCR2,CS22);
		clear_bit(TCCR2,CS20);
		set_bit(TCCR2,CS21);
		break;
 660:	08 95       	ret
			
		case PRECALER_1024 :
		set_bit(TCCR2,CS20);
 662:	85 b5       	in	r24, 0x25	; 37
 664:	81 60       	ori	r24, 0x01	; 1
 666:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR2,CS21);
 668:	85 b5       	in	r24, 0x25	; 37
 66a:	82 60       	ori	r24, 0x02	; 2
 66c:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR2,CS22);
 66e:	85 b5       	in	r24, 0x25	; 37
 670:	84 60       	ori	r24, 0x04	; 4
 672:	85 bd       	out	0x25, r24	; 37
}



Timer_ErrorStatus TIMER_2_start(Timer_Prescaler prescaler){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 674:	84 e0       	ldi	r24, 0x04	; 4
			
		case PRECALER_1024 :
		set_bit(TCCR2,CS20);
		set_bit(TCCR2,CS21);
		set_bit(TCCR2,CS22);
		break;
 676:	08 95       	ret
		
		
		default:
		errorStatus= INVALID_PRESCALER;
 678:	80 e0       	ldi	r24, 0x00	; 0
		break;
	}
	
	return errorStatus ;
}
 67a:	08 95       	ret

0000067c <TIMER_2_OvfNum>:



Timer_ErrorStatus TIMER_2_OvfNum(double overflow){
 67c:	8f 92       	push	r8
 67e:	9f 92       	push	r9
 680:	af 92       	push	r10
 682:	bf 92       	push	r11
 684:	cf 92       	push	r12
 686:	df 92       	push	r13
 688:	ef 92       	push	r14
 68a:	ff 92       	push	r15
 68c:	4b 01       	movw	r8, r22
 68e:	5c 01       	movw	r10, r24
	Timer_ErrorStatus errorStatus = TIMER_OK;
	double num_ovf = 0;
	if (overflow > 0)
 690:	20 e0       	ldi	r18, 0x00	; 0
 692:	30 e0       	ldi	r19, 0x00	; 0
 694:	a9 01       	movw	r20, r18
 696:	0e 94 5c 05 	call	0xab8	; 0xab8 <__gesf2>
 69a:	18 16       	cp	r1, r24
 69c:	ec f4       	brge	.+58     	; 0x6d8 <TIMER_2_OvfNum+0x5c>
 69e:	c1 2c       	mov	r12, r1
 6a0:	d1 2c       	mov	r13, r1
 6a2:	76 01       	movw	r14, r12
	{
		
		while(num_ovf<overflow){
			
			while(read_bit(TIFR,TOV2)==0);
 6a4:	08 b6       	in	r0, 0x38	; 56
 6a6:	06 fe       	sbrs	r0, 6
 6a8:	fd cf       	rjmp	.-6      	; 0x6a4 <TIMER_2_OvfNum+0x28>
			set_bit(TIFR,TOV2);
 6aa:	88 b7       	in	r24, 0x38	; 56
 6ac:	80 64       	ori	r24, 0x40	; 64
 6ae:	88 bf       	out	0x38, r24	; 56
			num_ovf++;
 6b0:	20 e0       	ldi	r18, 0x00	; 0
 6b2:	30 e0       	ldi	r19, 0x00	; 0
 6b4:	40 e8       	ldi	r20, 0x80	; 128
 6b6:	5f e3       	ldi	r21, 0x3F	; 63
 6b8:	c7 01       	movw	r24, r14
 6ba:	b6 01       	movw	r22, r12
 6bc:	0e 94 ac 03 	call	0x758	; 0x758 <__addsf3>
 6c0:	6b 01       	movw	r12, r22
 6c2:	7c 01       	movw	r14, r24
	Timer_ErrorStatus errorStatus = TIMER_OK;
	double num_ovf = 0;
	if (overflow > 0)
	{
		
		while(num_ovf<overflow){
 6c4:	9b 01       	movw	r18, r22
 6c6:	ac 01       	movw	r20, r24
 6c8:	c5 01       	movw	r24, r10
 6ca:	b4 01       	movw	r22, r8
 6cc:	0e 94 5c 05 	call	0xab8	; 0xab8 <__gesf2>
 6d0:	18 16       	cp	r1, r24
 6d2:	44 f3       	brlt	.-48     	; 0x6a4 <TIMER_2_OvfNum+0x28>
}



Timer_ErrorStatus TIMER_2_OvfNum(double overflow){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 6d4:	84 e0       	ldi	r24, 0x04	; 4
 6d6:	12 c0       	rjmp	.+36     	; 0x6fc <TIMER_2_OvfNum+0x80>
			while(read_bit(TIFR,TOV2)==0);
			set_bit(TIFR,TOV2);
			num_ovf++;
		}
		num_ovf = 0;
	}else if (overflow <= 0)
 6d8:	20 e0       	ldi	r18, 0x00	; 0
 6da:	30 e0       	ldi	r19, 0x00	; 0
 6dc:	a9 01       	movw	r20, r18
 6de:	c5 01       	movw	r24, r10
 6e0:	b4 01       	movw	r22, r8
 6e2:	0e 94 2f 04 	call	0x85e	; 0x85e <__cmpsf2>
 6e6:	18 16       	cp	r1, r24
 6e8:	44 f0       	brlt	.+16     	; 0x6fa <TIMER_2_OvfNum+0x7e>
	{
		overflow = 1 ;
		while(num_ovf<overflow){
			
			while(read_bit(TIFR,TOV2)==0);
 6ea:	08 b6       	in	r0, 0x38	; 56
 6ec:	06 fe       	sbrs	r0, 6
 6ee:	fd cf       	rjmp	.-6      	; 0x6ea <TIMER_2_OvfNum+0x6e>
			set_bit(TIFR,TOV2);
 6f0:	88 b7       	in	r24, 0x38	; 56
 6f2:	80 64       	ori	r24, 0x40	; 64
 6f4:	88 bf       	out	0x38, r24	; 56
}



Timer_ErrorStatus TIMER_2_OvfNum(double overflow){
	Timer_ErrorStatus errorStatus = TIMER_OK;
 6f6:	84 e0       	ldi	r24, 0x04	; 4
 6f8:	01 c0       	rjmp	.+2      	; 0x6fc <TIMER_2_OvfNum+0x80>
		}
		num_ovf = 0;
	}
	
	else{
		errorStatus = INVALID_OVF;
 6fa:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	return errorStatus;
}
 6fc:	ff 90       	pop	r15
 6fe:	ef 90       	pop	r14
 700:	df 90       	pop	r13
 702:	cf 90       	pop	r12
 704:	bf 90       	pop	r11
 706:	af 90       	pop	r10
 708:	9f 90       	pop	r9
 70a:	8f 90       	pop	r8
 70c:	08 95       	ret

0000070e <TIMER_2_DELAY_MS>:



void TIMER_2_DELAY_MS(double time_ms){
 70e:	cf 92       	push	r12
 710:	df 92       	push	r13
 712:	ef 92       	push	r14
 714:	ff 92       	push	r15
	double ovfNum2  ;
	double t2 ;
	t2 = time_ms/1000 ;
	ovfNum2 = ceil (t2 / 0.000256) ;
 716:	20 e0       	ldi	r18, 0x00	; 0
 718:	30 e0       	ldi	r19, 0x00	; 0
 71a:	4a e7       	ldi	r20, 0x7A	; 122
 71c:	54 e4       	ldi	r21, 0x44	; 68
 71e:	0e 94 34 04 	call	0x868	; 0x868 <__divsf3>
 722:	2d eb       	ldi	r18, 0xBD	; 189
 724:	37 e3       	ldi	r19, 0x37	; 55
 726:	46 e8       	ldi	r20, 0x86	; 134
 728:	59 e3       	ldi	r21, 0x39	; 57
 72a:	0e 94 34 04 	call	0x868	; 0x868 <__divsf3>
 72e:	0e 94 18 04 	call	0x830	; 0x830 <ceil>
 732:	6b 01       	movw	r12, r22
 734:	7c 01       	movw	r14, r24
	TIMER_2_init(NORMAL_MODE);
 736:	80 e0       	ldi	r24, 0x00	; 0
 738:	0e 94 bb 02 	call	0x576	; 0x576 <TIMER_2_init>
Timer_ErrorStatus TIMER_2_setIntialValue(uint8_t value){
	Timer_ErrorStatus errorStatus = TIMER_OK;

	if(value < TIMR2_MAX_VALUE && value >= 0){
		
		TCNT2 = value ;
 73c:	14 bc       	out	0x24, r1	; 36
	double t2 ;
	t2 = time_ms/1000 ;
	ovfNum2 = ceil (t2 / 0.000256) ;
	TIMER_2_init(NORMAL_MODE);
	TIMER_2_setIntialValue(0);
	TIMER_2_start(PRECALER_1);
 73e:	80 e0       	ldi	r24, 0x00	; 0
 740:	0e 94 e5 02 	call	0x5ca	; 0x5ca <TIMER_2_start>
	TIMER_2_OvfNum(ovfNum2);
 744:	c7 01       	movw	r24, r14
 746:	b6 01       	movw	r22, r12
 748:	0e 94 3e 03 	call	0x67c	; 0x67c <TIMER_2_OvfNum>
	
}
 74c:	ff 90       	pop	r15
 74e:	ef 90       	pop	r14
 750:	df 90       	pop	r13
 752:	cf 90       	pop	r12
 754:	08 95       	ret

00000756 <__subsf3>:
 756:	50 58       	subi	r21, 0x80	; 128

00000758 <__addsf3>:
 758:	bb 27       	eor	r27, r27
 75a:	aa 27       	eor	r26, r26
 75c:	0e 94 c3 03 	call	0x786	; 0x786 <__addsf3x>
 760:	0c 94 0a 05 	jmp	0xa14	; 0xa14 <__fp_round>
 764:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__fp_pscA>
 768:	38 f0       	brcs	.+14     	; 0x778 <__addsf3+0x20>
 76a:	0e 94 03 05 	call	0xa06	; 0xa06 <__fp_pscB>
 76e:	20 f0       	brcs	.+8      	; 0x778 <__addsf3+0x20>
 770:	39 f4       	brne	.+14     	; 0x780 <__addsf3+0x28>
 772:	9f 3f       	cpi	r25, 0xFF	; 255
 774:	19 f4       	brne	.+6      	; 0x77c <__addsf3+0x24>
 776:	26 f4       	brtc	.+8      	; 0x780 <__addsf3+0x28>
 778:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_nan>
 77c:	0e f4       	brtc	.+2      	; 0x780 <__addsf3+0x28>
 77e:	e0 95       	com	r30
 780:	e7 fb       	bst	r30, 7
 782:	0c 94 ca 04 	jmp	0x994	; 0x994 <__fp_inf>

00000786 <__addsf3x>:
 786:	e9 2f       	mov	r30, r25
 788:	0e 94 1b 05 	call	0xa36	; 0xa36 <__fp_split3>
 78c:	58 f3       	brcs	.-42     	; 0x764 <__addsf3+0xc>
 78e:	ba 17       	cp	r27, r26
 790:	62 07       	cpc	r22, r18
 792:	73 07       	cpc	r23, r19
 794:	84 07       	cpc	r24, r20
 796:	95 07       	cpc	r25, r21
 798:	20 f0       	brcs	.+8      	; 0x7a2 <__addsf3x+0x1c>
 79a:	79 f4       	brne	.+30     	; 0x7ba <__addsf3x+0x34>
 79c:	a6 f5       	brtc	.+104    	; 0x806 <__addsf3x+0x80>
 79e:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_zero>
 7a2:	0e f4       	brtc	.+2      	; 0x7a6 <__addsf3x+0x20>
 7a4:	e0 95       	com	r30
 7a6:	0b 2e       	mov	r0, r27
 7a8:	ba 2f       	mov	r27, r26
 7aa:	a0 2d       	mov	r26, r0
 7ac:	0b 01       	movw	r0, r22
 7ae:	b9 01       	movw	r22, r18
 7b0:	90 01       	movw	r18, r0
 7b2:	0c 01       	movw	r0, r24
 7b4:	ca 01       	movw	r24, r20
 7b6:	a0 01       	movw	r20, r0
 7b8:	11 24       	eor	r1, r1
 7ba:	ff 27       	eor	r31, r31
 7bc:	59 1b       	sub	r21, r25
 7be:	99 f0       	breq	.+38     	; 0x7e6 <__addsf3x+0x60>
 7c0:	59 3f       	cpi	r21, 0xF9	; 249
 7c2:	50 f4       	brcc	.+20     	; 0x7d8 <__addsf3x+0x52>
 7c4:	50 3e       	cpi	r21, 0xE0	; 224
 7c6:	68 f1       	brcs	.+90     	; 0x822 <__addsf3x+0x9c>
 7c8:	1a 16       	cp	r1, r26
 7ca:	f0 40       	sbci	r31, 0x00	; 0
 7cc:	a2 2f       	mov	r26, r18
 7ce:	23 2f       	mov	r18, r19
 7d0:	34 2f       	mov	r19, r20
 7d2:	44 27       	eor	r20, r20
 7d4:	58 5f       	subi	r21, 0xF8	; 248
 7d6:	f3 cf       	rjmp	.-26     	; 0x7be <__addsf3x+0x38>
 7d8:	46 95       	lsr	r20
 7da:	37 95       	ror	r19
 7dc:	27 95       	ror	r18
 7de:	a7 95       	ror	r26
 7e0:	f0 40       	sbci	r31, 0x00	; 0
 7e2:	53 95       	inc	r21
 7e4:	c9 f7       	brne	.-14     	; 0x7d8 <__addsf3x+0x52>
 7e6:	7e f4       	brtc	.+30     	; 0x806 <__addsf3x+0x80>
 7e8:	1f 16       	cp	r1, r31
 7ea:	ba 0b       	sbc	r27, r26
 7ec:	62 0b       	sbc	r22, r18
 7ee:	73 0b       	sbc	r23, r19
 7f0:	84 0b       	sbc	r24, r20
 7f2:	ba f0       	brmi	.+46     	; 0x822 <__addsf3x+0x9c>
 7f4:	91 50       	subi	r25, 0x01	; 1
 7f6:	a1 f0       	breq	.+40     	; 0x820 <__addsf3x+0x9a>
 7f8:	ff 0f       	add	r31, r31
 7fa:	bb 1f       	adc	r27, r27
 7fc:	66 1f       	adc	r22, r22
 7fe:	77 1f       	adc	r23, r23
 800:	88 1f       	adc	r24, r24
 802:	c2 f7       	brpl	.-16     	; 0x7f4 <__addsf3x+0x6e>
 804:	0e c0       	rjmp	.+28     	; 0x822 <__addsf3x+0x9c>
 806:	ba 0f       	add	r27, r26
 808:	62 1f       	adc	r22, r18
 80a:	73 1f       	adc	r23, r19
 80c:	84 1f       	adc	r24, r20
 80e:	48 f4       	brcc	.+18     	; 0x822 <__addsf3x+0x9c>
 810:	87 95       	ror	r24
 812:	77 95       	ror	r23
 814:	67 95       	ror	r22
 816:	b7 95       	ror	r27
 818:	f7 95       	ror	r31
 81a:	9e 3f       	cpi	r25, 0xFE	; 254
 81c:	08 f0       	brcs	.+2      	; 0x820 <__addsf3x+0x9a>
 81e:	b0 cf       	rjmp	.-160    	; 0x780 <__addsf3+0x28>
 820:	93 95       	inc	r25
 822:	88 0f       	add	r24, r24
 824:	08 f0       	brcs	.+2      	; 0x828 <__addsf3x+0xa2>
 826:	99 27       	eor	r25, r25
 828:	ee 0f       	add	r30, r30
 82a:	97 95       	ror	r25
 82c:	87 95       	ror	r24
 82e:	08 95       	ret

00000830 <ceil>:
 830:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__fp_trunc>
 834:	90 f0       	brcs	.+36     	; 0x85a <ceil+0x2a>
 836:	9f 37       	cpi	r25, 0x7F	; 127
 838:	48 f4       	brcc	.+18     	; 0x84c <ceil+0x1c>
 83a:	91 11       	cpse	r25, r1
 83c:	16 f4       	brtc	.+4      	; 0x842 <ceil+0x12>
 83e:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_szero>
 842:	60 e0       	ldi	r22, 0x00	; 0
 844:	70 e0       	ldi	r23, 0x00	; 0
 846:	80 e8       	ldi	r24, 0x80	; 128
 848:	9f e3       	ldi	r25, 0x3F	; 63
 84a:	08 95       	ret
 84c:	26 f0       	brts	.+8      	; 0x856 <ceil+0x26>
 84e:	1b 16       	cp	r1, r27
 850:	61 1d       	adc	r22, r1
 852:	71 1d       	adc	r23, r1
 854:	81 1d       	adc	r24, r1
 856:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_mintl>
 85a:	0c 94 eb 04 	jmp	0x9d6	; 0x9d6 <__fp_mpack>

0000085e <__cmpsf2>:
 85e:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_cmp>
 862:	08 f4       	brcc	.+2      	; 0x866 <__stack+0x7>
 864:	81 e0       	ldi	r24, 0x01	; 1
 866:	08 95       	ret

00000868 <__divsf3>:
 868:	0e 94 48 04 	call	0x890	; 0x890 <__divsf3x>
 86c:	0c 94 0a 05 	jmp	0xa14	; 0xa14 <__fp_round>
 870:	0e 94 03 05 	call	0xa06	; 0xa06 <__fp_pscB>
 874:	58 f0       	brcs	.+22     	; 0x88c <__divsf3+0x24>
 876:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__fp_pscA>
 87a:	40 f0       	brcs	.+16     	; 0x88c <__divsf3+0x24>
 87c:	29 f4       	brne	.+10     	; 0x888 <__divsf3+0x20>
 87e:	5f 3f       	cpi	r21, 0xFF	; 255
 880:	29 f0       	breq	.+10     	; 0x88c <__divsf3+0x24>
 882:	0c 94 ca 04 	jmp	0x994	; 0x994 <__fp_inf>
 886:	51 11       	cpse	r21, r1
 888:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_szero>
 88c:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_nan>

00000890 <__divsf3x>:
 890:	0e 94 1b 05 	call	0xa36	; 0xa36 <__fp_split3>
 894:	68 f3       	brcs	.-38     	; 0x870 <__divsf3+0x8>

00000896 <__divsf3_pse>:
 896:	99 23       	and	r25, r25
 898:	b1 f3       	breq	.-20     	; 0x886 <__divsf3+0x1e>
 89a:	55 23       	and	r21, r21
 89c:	91 f3       	breq	.-28     	; 0x882 <__divsf3+0x1a>
 89e:	95 1b       	sub	r25, r21
 8a0:	55 0b       	sbc	r21, r21
 8a2:	bb 27       	eor	r27, r27
 8a4:	aa 27       	eor	r26, r26
 8a6:	62 17       	cp	r22, r18
 8a8:	73 07       	cpc	r23, r19
 8aa:	84 07       	cpc	r24, r20
 8ac:	38 f0       	brcs	.+14     	; 0x8bc <__divsf3_pse+0x26>
 8ae:	9f 5f       	subi	r25, 0xFF	; 255
 8b0:	5f 4f       	sbci	r21, 0xFF	; 255
 8b2:	22 0f       	add	r18, r18
 8b4:	33 1f       	adc	r19, r19
 8b6:	44 1f       	adc	r20, r20
 8b8:	aa 1f       	adc	r26, r26
 8ba:	a9 f3       	breq	.-22     	; 0x8a6 <__divsf3_pse+0x10>
 8bc:	35 d0       	rcall	.+106    	; 0x928 <__divsf3_pse+0x92>
 8be:	0e 2e       	mov	r0, r30
 8c0:	3a f0       	brmi	.+14     	; 0x8d0 <__divsf3_pse+0x3a>
 8c2:	e0 e8       	ldi	r30, 0x80	; 128
 8c4:	32 d0       	rcall	.+100    	; 0x92a <__divsf3_pse+0x94>
 8c6:	91 50       	subi	r25, 0x01	; 1
 8c8:	50 40       	sbci	r21, 0x00	; 0
 8ca:	e6 95       	lsr	r30
 8cc:	00 1c       	adc	r0, r0
 8ce:	ca f7       	brpl	.-14     	; 0x8c2 <__divsf3_pse+0x2c>
 8d0:	2b d0       	rcall	.+86     	; 0x928 <__divsf3_pse+0x92>
 8d2:	fe 2f       	mov	r31, r30
 8d4:	29 d0       	rcall	.+82     	; 0x928 <__divsf3_pse+0x92>
 8d6:	66 0f       	add	r22, r22
 8d8:	77 1f       	adc	r23, r23
 8da:	88 1f       	adc	r24, r24
 8dc:	bb 1f       	adc	r27, r27
 8de:	26 17       	cp	r18, r22
 8e0:	37 07       	cpc	r19, r23
 8e2:	48 07       	cpc	r20, r24
 8e4:	ab 07       	cpc	r26, r27
 8e6:	b0 e8       	ldi	r27, 0x80	; 128
 8e8:	09 f0       	breq	.+2      	; 0x8ec <__divsf3_pse+0x56>
 8ea:	bb 0b       	sbc	r27, r27
 8ec:	80 2d       	mov	r24, r0
 8ee:	bf 01       	movw	r22, r30
 8f0:	ff 27       	eor	r31, r31
 8f2:	93 58       	subi	r25, 0x83	; 131
 8f4:	5f 4f       	sbci	r21, 0xFF	; 255
 8f6:	3a f0       	brmi	.+14     	; 0x906 <__divsf3_pse+0x70>
 8f8:	9e 3f       	cpi	r25, 0xFE	; 254
 8fa:	51 05       	cpc	r21, r1
 8fc:	78 f0       	brcs	.+30     	; 0x91c <__divsf3_pse+0x86>
 8fe:	0c 94 ca 04 	jmp	0x994	; 0x994 <__fp_inf>
 902:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_szero>
 906:	5f 3f       	cpi	r21, 0xFF	; 255
 908:	e4 f3       	brlt	.-8      	; 0x902 <__divsf3_pse+0x6c>
 90a:	98 3e       	cpi	r25, 0xE8	; 232
 90c:	d4 f3       	brlt	.-12     	; 0x902 <__divsf3_pse+0x6c>
 90e:	86 95       	lsr	r24
 910:	77 95       	ror	r23
 912:	67 95       	ror	r22
 914:	b7 95       	ror	r27
 916:	f7 95       	ror	r31
 918:	9f 5f       	subi	r25, 0xFF	; 255
 91a:	c9 f7       	brne	.-14     	; 0x90e <__divsf3_pse+0x78>
 91c:	88 0f       	add	r24, r24
 91e:	91 1d       	adc	r25, r1
 920:	96 95       	lsr	r25
 922:	87 95       	ror	r24
 924:	97 f9       	bld	r25, 7
 926:	08 95       	ret
 928:	e1 e0       	ldi	r30, 0x01	; 1
 92a:	66 0f       	add	r22, r22
 92c:	77 1f       	adc	r23, r23
 92e:	88 1f       	adc	r24, r24
 930:	bb 1f       	adc	r27, r27
 932:	62 17       	cp	r22, r18
 934:	73 07       	cpc	r23, r19
 936:	84 07       	cpc	r24, r20
 938:	ba 07       	cpc	r27, r26
 93a:	20 f0       	brcs	.+8      	; 0x944 <__divsf3_pse+0xae>
 93c:	62 1b       	sub	r22, r18
 93e:	73 0b       	sbc	r23, r19
 940:	84 0b       	sbc	r24, r20
 942:	ba 0b       	sbc	r27, r26
 944:	ee 1f       	adc	r30, r30
 946:	88 f7       	brcc	.-30     	; 0x92a <__divsf3_pse+0x94>
 948:	e0 95       	com	r30
 94a:	08 95       	ret

0000094c <__fp_cmp>:
 94c:	99 0f       	add	r25, r25
 94e:	00 08       	sbc	r0, r0
 950:	55 0f       	add	r21, r21
 952:	aa 0b       	sbc	r26, r26
 954:	e0 e8       	ldi	r30, 0x80	; 128
 956:	fe ef       	ldi	r31, 0xFE	; 254
 958:	16 16       	cp	r1, r22
 95a:	17 06       	cpc	r1, r23
 95c:	e8 07       	cpc	r30, r24
 95e:	f9 07       	cpc	r31, r25
 960:	c0 f0       	brcs	.+48     	; 0x992 <__fp_cmp+0x46>
 962:	12 16       	cp	r1, r18
 964:	13 06       	cpc	r1, r19
 966:	e4 07       	cpc	r30, r20
 968:	f5 07       	cpc	r31, r21
 96a:	98 f0       	brcs	.+38     	; 0x992 <__fp_cmp+0x46>
 96c:	62 1b       	sub	r22, r18
 96e:	73 0b       	sbc	r23, r19
 970:	84 0b       	sbc	r24, r20
 972:	95 0b       	sbc	r25, r21
 974:	39 f4       	brne	.+14     	; 0x984 <__fp_cmp+0x38>
 976:	0a 26       	eor	r0, r26
 978:	61 f0       	breq	.+24     	; 0x992 <__fp_cmp+0x46>
 97a:	23 2b       	or	r18, r19
 97c:	24 2b       	or	r18, r20
 97e:	25 2b       	or	r18, r21
 980:	21 f4       	brne	.+8      	; 0x98a <__fp_cmp+0x3e>
 982:	08 95       	ret
 984:	0a 26       	eor	r0, r26
 986:	09 f4       	brne	.+2      	; 0x98a <__fp_cmp+0x3e>
 988:	a1 40       	sbci	r26, 0x01	; 1
 98a:	a6 95       	lsr	r26
 98c:	8f ef       	ldi	r24, 0xFF	; 255
 98e:	81 1d       	adc	r24, r1
 990:	81 1d       	adc	r24, r1
 992:	08 95       	ret

00000994 <__fp_inf>:
 994:	97 f9       	bld	r25, 7
 996:	9f 67       	ori	r25, 0x7F	; 127
 998:	80 e8       	ldi	r24, 0x80	; 128
 99a:	70 e0       	ldi	r23, 0x00	; 0
 99c:	60 e0       	ldi	r22, 0x00	; 0
 99e:	08 95       	ret

000009a0 <__fp_mintl>:
 9a0:	88 23       	and	r24, r24
 9a2:	71 f4       	brne	.+28     	; 0x9c0 <__fp_mintl+0x20>
 9a4:	77 23       	and	r23, r23
 9a6:	21 f0       	breq	.+8      	; 0x9b0 <__fp_mintl+0x10>
 9a8:	98 50       	subi	r25, 0x08	; 8
 9aa:	87 2b       	or	r24, r23
 9ac:	76 2f       	mov	r23, r22
 9ae:	07 c0       	rjmp	.+14     	; 0x9be <__fp_mintl+0x1e>
 9b0:	66 23       	and	r22, r22
 9b2:	11 f4       	brne	.+4      	; 0x9b8 <__fp_mintl+0x18>
 9b4:	99 27       	eor	r25, r25
 9b6:	0d c0       	rjmp	.+26     	; 0x9d2 <__fp_mintl+0x32>
 9b8:	90 51       	subi	r25, 0x10	; 16
 9ba:	86 2b       	or	r24, r22
 9bc:	70 e0       	ldi	r23, 0x00	; 0
 9be:	60 e0       	ldi	r22, 0x00	; 0
 9c0:	2a f0       	brmi	.+10     	; 0x9cc <__fp_mintl+0x2c>
 9c2:	9a 95       	dec	r25
 9c4:	66 0f       	add	r22, r22
 9c6:	77 1f       	adc	r23, r23
 9c8:	88 1f       	adc	r24, r24
 9ca:	da f7       	brpl	.-10     	; 0x9c2 <__fp_mintl+0x22>
 9cc:	88 0f       	add	r24, r24
 9ce:	96 95       	lsr	r25
 9d0:	87 95       	ror	r24
 9d2:	97 f9       	bld	r25, 7
 9d4:	08 95       	ret

000009d6 <__fp_mpack>:
 9d6:	9f 3f       	cpi	r25, 0xFF	; 255
 9d8:	31 f0       	breq	.+12     	; 0x9e6 <__fp_mpack_finite+0xc>

000009da <__fp_mpack_finite>:
 9da:	91 50       	subi	r25, 0x01	; 1
 9dc:	20 f4       	brcc	.+8      	; 0x9e6 <__fp_mpack_finite+0xc>
 9de:	87 95       	ror	r24
 9e0:	77 95       	ror	r23
 9e2:	67 95       	ror	r22
 9e4:	b7 95       	ror	r27
 9e6:	88 0f       	add	r24, r24
 9e8:	91 1d       	adc	r25, r1
 9ea:	96 95       	lsr	r25
 9ec:	87 95       	ror	r24
 9ee:	97 f9       	bld	r25, 7
 9f0:	08 95       	ret

000009f2 <__fp_nan>:
 9f2:	9f ef       	ldi	r25, 0xFF	; 255
 9f4:	80 ec       	ldi	r24, 0xC0	; 192
 9f6:	08 95       	ret

000009f8 <__fp_pscA>:
 9f8:	00 24       	eor	r0, r0
 9fa:	0a 94       	dec	r0
 9fc:	16 16       	cp	r1, r22
 9fe:	17 06       	cpc	r1, r23
 a00:	18 06       	cpc	r1, r24
 a02:	09 06       	cpc	r0, r25
 a04:	08 95       	ret

00000a06 <__fp_pscB>:
 a06:	00 24       	eor	r0, r0
 a08:	0a 94       	dec	r0
 a0a:	12 16       	cp	r1, r18
 a0c:	13 06       	cpc	r1, r19
 a0e:	14 06       	cpc	r1, r20
 a10:	05 06       	cpc	r0, r21
 a12:	08 95       	ret

00000a14 <__fp_round>:
 a14:	09 2e       	mov	r0, r25
 a16:	03 94       	inc	r0
 a18:	00 0c       	add	r0, r0
 a1a:	11 f4       	brne	.+4      	; 0xa20 <__fp_round+0xc>
 a1c:	88 23       	and	r24, r24
 a1e:	52 f0       	brmi	.+20     	; 0xa34 <__fp_round+0x20>
 a20:	bb 0f       	add	r27, r27
 a22:	40 f4       	brcc	.+16     	; 0xa34 <__fp_round+0x20>
 a24:	bf 2b       	or	r27, r31
 a26:	11 f4       	brne	.+4      	; 0xa2c <__fp_round+0x18>
 a28:	60 ff       	sbrs	r22, 0
 a2a:	04 c0       	rjmp	.+8      	; 0xa34 <__fp_round+0x20>
 a2c:	6f 5f       	subi	r22, 0xFF	; 255
 a2e:	7f 4f       	sbci	r23, 0xFF	; 255
 a30:	8f 4f       	sbci	r24, 0xFF	; 255
 a32:	9f 4f       	sbci	r25, 0xFF	; 255
 a34:	08 95       	ret

00000a36 <__fp_split3>:
 a36:	57 fd       	sbrc	r21, 7
 a38:	90 58       	subi	r25, 0x80	; 128
 a3a:	44 0f       	add	r20, r20
 a3c:	55 1f       	adc	r21, r21
 a3e:	59 f0       	breq	.+22     	; 0xa56 <__fp_splitA+0x10>
 a40:	5f 3f       	cpi	r21, 0xFF	; 255
 a42:	71 f0       	breq	.+28     	; 0xa60 <__fp_splitA+0x1a>
 a44:	47 95       	ror	r20

00000a46 <__fp_splitA>:
 a46:	88 0f       	add	r24, r24
 a48:	97 fb       	bst	r25, 7
 a4a:	99 1f       	adc	r25, r25
 a4c:	61 f0       	breq	.+24     	; 0xa66 <__fp_splitA+0x20>
 a4e:	9f 3f       	cpi	r25, 0xFF	; 255
 a50:	79 f0       	breq	.+30     	; 0xa70 <__fp_splitA+0x2a>
 a52:	87 95       	ror	r24
 a54:	08 95       	ret
 a56:	12 16       	cp	r1, r18
 a58:	13 06       	cpc	r1, r19
 a5a:	14 06       	cpc	r1, r20
 a5c:	55 1f       	adc	r21, r21
 a5e:	f2 cf       	rjmp	.-28     	; 0xa44 <__fp_split3+0xe>
 a60:	46 95       	lsr	r20
 a62:	f1 df       	rcall	.-30     	; 0xa46 <__fp_splitA>
 a64:	08 c0       	rjmp	.+16     	; 0xa76 <__fp_splitA+0x30>
 a66:	16 16       	cp	r1, r22
 a68:	17 06       	cpc	r1, r23
 a6a:	18 06       	cpc	r1, r24
 a6c:	99 1f       	adc	r25, r25
 a6e:	f1 cf       	rjmp	.-30     	; 0xa52 <__fp_splitA+0xc>
 a70:	86 95       	lsr	r24
 a72:	71 05       	cpc	r23, r1
 a74:	61 05       	cpc	r22, r1
 a76:	08 94       	sec
 a78:	08 95       	ret

00000a7a <__fp_trunc>:
 a7a:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_splitA>
 a7e:	a0 f0       	brcs	.+40     	; 0xaa8 <__fp_trunc+0x2e>
 a80:	be e7       	ldi	r27, 0x7E	; 126
 a82:	b9 17       	cp	r27, r25
 a84:	88 f4       	brcc	.+34     	; 0xaa8 <__fp_trunc+0x2e>
 a86:	bb 27       	eor	r27, r27
 a88:	9f 38       	cpi	r25, 0x8F	; 143
 a8a:	60 f4       	brcc	.+24     	; 0xaa4 <__fp_trunc+0x2a>
 a8c:	16 16       	cp	r1, r22
 a8e:	b1 1d       	adc	r27, r1
 a90:	67 2f       	mov	r22, r23
 a92:	78 2f       	mov	r23, r24
 a94:	88 27       	eor	r24, r24
 a96:	98 5f       	subi	r25, 0xF8	; 248
 a98:	f7 cf       	rjmp	.-18     	; 0xa88 <__fp_trunc+0xe>
 a9a:	86 95       	lsr	r24
 a9c:	77 95       	ror	r23
 a9e:	67 95       	ror	r22
 aa0:	b1 1d       	adc	r27, r1
 aa2:	93 95       	inc	r25
 aa4:	96 39       	cpi	r25, 0x96	; 150
 aa6:	c8 f3       	brcs	.-14     	; 0xa9a <__fp_trunc+0x20>
 aa8:	08 95       	ret

00000aaa <__fp_zero>:
 aaa:	e8 94       	clt

00000aac <__fp_szero>:
 aac:	bb 27       	eor	r27, r27
 aae:	66 27       	eor	r22, r22
 ab0:	77 27       	eor	r23, r23
 ab2:	cb 01       	movw	r24, r22
 ab4:	97 f9       	bld	r25, 7
 ab6:	08 95       	ret

00000ab8 <__gesf2>:
 ab8:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_cmp>
 abc:	08 f4       	brcc	.+2      	; 0xac0 <__gesf2+0x8>
 abe:	8f ef       	ldi	r24, 0xFF	; 255
 ac0:	08 95       	ret

00000ac2 <__tablejump2__>:
 ac2:	ee 0f       	add	r30, r30
 ac4:	ff 1f       	adc	r31, r31
 ac6:	05 90       	lpm	r0, Z+
 ac8:	f4 91       	lpm	r31, Z
 aca:	e0 2d       	mov	r30, r0
 acc:	09 94       	ijmp

00000ace <_exit>:
 ace:	f8 94       	cli

00000ad0 <__stop_program>:
 ad0:	ff cf       	rjmp	.-2      	; 0xad0 <__stop_program>
